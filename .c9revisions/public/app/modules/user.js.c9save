{"ts":1349090889285,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"define([\n  // Global application context.\n  \"app\",\n\n  // Third-party libraries.\n  \"backbone\",\n\n  // Modules\n  \"modules/repo\"\n],\n\nfunction(app, Backbone, Repo) {\n\n  var User = app.module();\n\n  User.Collection = Backbone.Collection.extend({\n    url: function() {\n      return \"https://api.github.com/orgs/\" + this.org + \"/members?callback=?\";\n    },\n\n    cache: true,\n\n    parse: function(obj) {\n      // Safety check ensuring only valid data is used\n      if (obj.data.message !== \"Not Found\") {\n        this.status = \"valid\";\n\n        return obj.data;\n      }\n\n      this.status = \"invalid\";\n\n      return this.models;\n    },\n\n    initialize: function(models, options) {\n      if (options) {\n        this.org = options.org;\n      }\n    }\n  });\n\n  User.Views.Item = Backbone.View.extend({\n    template: \"user/item\",\n\n    tagName: \"li\",\n\n    serialize: function() {\n      return { model: this.model };\n    },\n\n    events: {\n      click: \"changeUser\"\n    },\n\n    changeUser: function(ev) {\n      var model = this.model;\n      var org = app.router.users.org;\n      var name = model.get(\"login\");\n\n      app.router.go(\"org\", org, \"user\", name);\n    },\n\n    cleanup: function() {\n      this.model.off(null, null, this);\n    },\n\n    initialize: function() {\n      this.model.on(\"change\", this.render, this);\n    }\n  });\n\n  User.Views.List = Backbone.View.extend({\n    template: \"user/list\",\n\n    serialize: function() {\n      return { collection: this.collection };\n    },\n\n    beforeRender: function() {\n      this.collection.each(function(user) {\n        this.insertView(\"ul\", new User.Views.Item({\n          model: user\n        }));\n      }, this);\n    },\n\n    afterRender: function() {\n      // Only re-focus if invalid\n      this.$(\"input.invalid\").focus();\n    },\n\n    initialize: function() {\n      this.collection.on(\"reset\", this.render, this);\n\n      this.collection.on(\"fetch\", function() {\n        this.$(\"ul\").parent().html(\"<img src='/assets/img/spinner-gray.gif'>\");\n      }, this);\n    },\n\n    events: {\n      \"submit form\": \"updateOrg\"\n    },\n\n    updateOrg: function(ev) {\n      app.router.go(\"org\", this.$(\".org\").val());\n\n      return false;\n    }\n  });\n\n  return User;\n\n});\n"]],"start1":0,"start2":0,"length1":0,"length2":2188}]],"length":2188}
