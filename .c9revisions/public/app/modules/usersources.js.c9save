{"ts":1349090328860,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"define([\n    // Global application context.\n    \"app\",\n    \"backbone\",\n    \"modules/leftmenu\"\n],\n\n    function(app, Backbone, LeftMenu) {\n\n        var UserSource = app.module();\n\n        UserSource.Collection = Backbone.Collection.extend({\n            url: function() {\n                return \"/mytables\";\n            },\n\n            cache: true,\n\n            parse: function(obj) {\n                if (!obj.error) {\n                    return obj.data;\n                }\n                return this.models;\n            },\n\n            initialize: function(models, options) {\n                this.fetch();\n            }\n        });\n\n        UserSource.Views.Item = Backbone.View.extend({\n            template: \"usersource/item\",\n            tagName: \"li\",\n\n            serialize: function() {\n                return {\n                    model: this.model\n                };\n            }\n        });\n\n        UserSource.Views.List = Backbone.View.extend({\n            template: \"usersource/listSources\",\n            tagName: \"ul\",\n            className: \"nav nav-list scrollbar fff\",\n\n            beforeRender: function() {\n                this.$el.children().remove();\n                this.collection.each(function(source) {\n                    this.insertView(new UserSource.Views.Item({\n                        model: source\n                    }));\n                }, this);\n            },\n\n            cleanup: function() {\n                this.collection.off(null, null, this);\n            },\n\n            initialize: function() {\n                this.collection.on(\"reset\", this.render, this);\n            }\n        });\n\n        return UserSource;\n\n    });\n"]],"start1":0,"start2":0,"length1":0,"length2":1665}]],"length":1665}
{"contributors":[],"silentsave":false,"ts":1349090807728,"patch":[[{"diffs":[[0,"      }, this);\n"],[1,"                $('body').append(this);\n"],[0,"            },\n\n"]],"start1":1364,"start2":1364,"length1":32,"length2":72}]],"length":1705,"saved":false}
{"ts":1349090852723,"patch":[[{"diffs":[[0,"s);\n"],[-1,"                $('body').append(this);\n"],[0,"    "]],"start1":1376,"start2":1376,"length1":48,"length2":8}]],"length":1665,"saved":false}
{"ts":1349090974273,"patch":[[{"diffs":[[0,"     };\n"],[1,"            },\n            initialize: function() {\n                this.model.on(\"change\", this.render, this);\n"],[0,"        "]],"start1":867,"start2":867,"length1":16,"length2":128}]],"length":1777,"saved":false}
