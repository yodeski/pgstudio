{"ts":1349434582910,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1349434596393,"patch":[[{"diffs":[[1,"app.register(\"map-module\", function(sandbox){\r\n    /*\r\n    * @constructor\r\n\t*/\r\n\treturn {\r\n\t\t//init and destroy methods REQUIRED\r\n\t\tobjSource: {}, //objeto tabla/view\r\n\t\tinit: function(){\r\n\t\t\tthis.moduleId = \"leftMenu\";\r\n\t\t\tthis.el = sandbox.getElement({ selector:\"#\" + this.moduleId });\r\n            this.MenuData = null;\r\n            this.ListSources = {};\r\n            this.ListViews = {};\r\n            this.ListFunctions = {};\r\n            this.ListShares = {};\r\n\r\n            this.enumDBType = { table: \"mytables\", view: \"myviews\", sproc: \"myfunctions\", shares: \"myshares\" }; \r\n    \t\t\r\n            sandbox.setEvent({\r\n\t\t\t\ttype: \"click\",\r\n\t\t\t\tparent: \"#\" + this.moduleId,\r\n\t\t\t\tchild: \"a\",\r\n\t\t\t\tmethod: \"delegate\",\r\n\t\t\t\thandler: { context:this, method:this.handleEvent },\r\n\t\t\t\tmoduleId: this.moduleId\r\n\t\t\t});\r\n    \t\tsandbox.addListener([{\r\n\t\t\t\ttype: \"menu-success\",\r\n\t\t\t\tcontext: this,\r\n\t\t\t\tcallback: this.bindItemClick\r\n\t\t\t}]);\r\n    \t\t//TODO - Manejar menu y header con template\r\n            \r\n            this.loadSections();\r\n\r\n\t\t},\r\n\t\tloadSections: function(){\r\n\r\n    \t\t$(\"#maincontainer\").append(sandbox.fetchTemplate(sandbox.getTemplatesPath('header'), []));\r\n\t\t\tthis.getMenu();\r\n\r\n\t\t},\r\n\t    adjustMainContent: function() {\r\n\t        var docH = $(document).height();\r\n\t        var headH = $(\"#headerContainer\").height();\r\n\t        var footH = $(\"#footer\").height();\r\n\r\n\t        $(\"#maincontainer\").height(docH - headH - footH - 130);\t        \r\n\t    },\r\n\r\n        getMenu: function(){\r\n            var self = this;\r\n            $.get('getMenu', function (res) {\r\n\r\n                self.MenuData = res.data;\r\n                self.showMenu();\r\n\r\n            });\r\n\t\t},\r\n\r\n    \t//this method will display the menu items returned by ajax call\r\n\t\tshowMenu: function(res){\r\n\t\t\tvar leftmenu = sandbox.getElement({\r\n\t\t\t\tselector: \"#leftMenu\"\r\n\t\t\t});\r\n            \r\n\t\t\t//loop over the returned json and display the elements\r\n            \r\n\t\t\tif(this.MenuData.length>0){\r\n\r\n\t\t\t\tfor (var i = 0; i < this.MenuData.length; i++) {\r\n                    var item = this.MenuData[i];\r\n                    var relpop = (item.inControl=='popover') ? 'popover' : '';\r\n                    var href = (item.inControl=='popover') ? '#' : item.ref;\r\n                    var $_li = $('<li id=\"itm_' + item.itemname + '\" class=\"pointer\" style=\"line-height:30px; color:' + item.color + '\"><a idData=\"' + item.id + '\" rel=\"' + relpop + '\" href=\"' + href + '\" class=\"text-shadow nolink\" style=\"color:' + item.color + '\"><i class=\"' + item.icon + ' icon-large text-shadow\"></i>  <small style=\"font-size:12px;\">' + item.text + '</small></a></li>');\r\n\r\n                    //setup some events and define a callback\r\n                    if(item.inControl=='popover')\r\n                    \tthis.initPopOver($_li, item);\r\n\r\n                    sandbox.domManipulation([{\r\n            \t\t\ttype: \"append\",\r\n        \t\t\t\twhere: leftmenu,\r\n        \t\t\t\twhat: $_li\r\n        \t\t\t}]);\r\n                    \r\n\t\t\t\t}\r\n\t\t\t}\r\n            \r\n\t\t},\r\n        //initialize the popover\r\n        initPopOver: function(el, item) {\r\n            var self = this;\r\n\r\n            el.clickover({\r\n                tip_id: item.itemname,\r\n                html: true,\r\n                title: item.text,\r\n                trigger:'click',\r\n                placement:'belowRight',\r\n                allow_multiple:false,\r\n                global_close: false,\r\n                //content: template,\r\n                onShown: function() { self.setContentPopOver(this, item, el) },\r\n                onHide: function() { $('ul#leftMenu li').removeClass('active'); }\r\n            });\r\n\r\n         \t$.ajax({ url: \"/\" + item.ref, async: true }).then(function(data) {\r\n       \t\t\t\r\n       \t\t\tswitch(item.ref)\r\n       \t\t\t{\r\n       \t\t\t\tcase self.enumDBType.table: self.ListSources.data = data.objectList; break;\r\n       \t\t\t\tcase self.enumDBType.sproc: self.ListFunctions.data = data.objectList; break;\r\n                    case self.enumDBType.shares: self.ListShares.data = data.objectList; break;\r\n       \t\t\t}\r\n       \t\t\t   \t\t\t \r\n        \t});           \r\n\r\n            $('.scrollbar').scrollbar();\r\n        },\r\n\r\n\t    setContentPopOver: function(pov, item, elem){\r\n\t        var self = this;\r\n\t        var list=[];\r\n\t        //Asign conten to POPOVER\r\n\t        pov.$tip.find('.popover-content > *').html(this.appendSources(item.ref));\r\n\r\n\t        $('.scrollbar').scrollbar();\r\n\r\n\t        $('ul#leftMenu li').removeClass('active');\r\n\t        elem.addClass('active');\r\n\t        var popheader = $(\"#\" + item.itemname).find(\"h3\");\r\n\t        var toolbtn;\r\n\t        if(item.toolbar.length > 0) {\r\n\t            toolbtn = $('<div class=\"pull-right\"><a href=\"#\" class=\"text-shadow nolink\" data-toggle=\"modal\" data-target=\"#loginform\" rel=\"tooltip\" role=\"button\" data-placement=\"right\" title=\"' + item.toolbar[0].tip + '\"><i class=\"' + item.toolbar[0].toolicon + ' \"></i></a></div>');\r\n\t            toolbtn.find('a[rel=tooltip]').tooltip();\r\n\t        }\r\n\t        popheader.append(toolbtn);\r\n\t        $('a[data-target=\"#loginform\"]').click(function(){\r\n\t        \talert('open dialog');\r\n\t        });\r\n\r\n\t    },\r\n\r\n        appendSources: function(who){\r\n\t\t\tvar self = this;\r\n\t\t\tvar template = null;\r\n\t\t\tvar pathTemplate = \"\";\r\n\t\t\tvar list = {};\r\n\t\t\tvar data = [];\r\n\t\t\tvar isRes = false;\r\n\t\t\tif(!self.ListSources.data || !self.ListFunctions.data || !self.ListShares.data)\r\n            {\r\n            \t$.ajax({ url: \"/\" + who, async: false }).then(function(data) {\r\n\t\t \t\t\tlist.data = data.objectList;\r\n\t\t \t\t\tdata = data.objectList;\r\n\t\t \t\t\tisRes = true;\r\n            \t});\r\n            }\r\n \t\t\tswitch(who)\r\n   \t\t\t{\r\n   \t\t\t\tcase self.enumDBType.table: \r\n   \t\t\t\t{\r\n   \t\t\t\t\tif(isRes)\r\n   \t\t\t\t\t\tself.ListSources.data \t= data;\t\r\n   \t\t\t\t\telse\r\n   \t\t\t\t\t\tlist.data = self.ListSources.data;\r\n   \t\t\t\t\tpathTemplate =sandbox.getTemplatesPath('listSources'); break;\r\n   \t\t\t\t}\r\n   \t\t\t\tcase self.enumDBType.view:  \r\n   \t\t\t\t{\r\n   \t\t\t\t\tif(isRes)\r\n   \t\t\t\t\t\tself.ListSources.data = data;\t\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tlist.data = self.ListSources.data;\r\n   \t\t\t\t\tpathTemplate =sandbox.getTemplatesPath('listViews'); break;\r\n   \t\t\t\t}\r\n   \t\t\t\tcase self.enumDBType.sproc:\r\n   \t\t\t\t{\r\n   \t\t\t\t\tif(isRes)\r\n   \t\t\t\t\t\tself.ListFunctions.data = data;\t\r\n   \t\t\t\t\telse\r\n   \t\t\t\t\t\tlist.data = self.ListFunctions.data\t\r\n   \t\t\t\t\tpathTemplate =sandbox.getTemplatesPath('listFunctions');break; \r\n   \t\t\t\t}\r\n       \t\t\tcase self.enumDBType.shares:\r\n   \t\t\t\t{\r\n   \t\t\t\t\tif(isRes)\r\n   \t\t\t\t\t\tself.ListShares.data = data;\t\r\n   \t\t\t\t\telse\r\n   \t\t\t\t\t\tlist.data = self.ListShares.data\t\r\n   \t\t\t\t\tpathTemplate = sandbox.getTemplatesPath('listShares');break; \r\n   \t\t\t\t}                   \r\n                   \r\n   \t\t\t}\r\n\r\n            template = sandbox.fetchTemplate(pathTemplate, list); \r\n\r\n            return template;          \r\n\t\t},\r\n\r\n\t};\r\n});\r\n"]],"start1":0,"start2":0,"length1":0,"length2":6788}]],"length":6788,"saved":false}
{"ts":1349434611511,"patch":[[{"diffs":[[0,"leId = \""],[-1,"leftMenu"],[1,"MyMap"],[0,"\";\r\n\t\t\tt"]],"start1":201,"start2":201,"length1":24,"length2":21}]],"length":6785,"saved":false}
{"ts":1349434640172,"patch":[[{"diffs":[[0,"    "],[-1,"        this.MenuData = null;\r\n            this.ListSources = {};\r\n            this.ListViews = {};\r\n            this.ListFunctions = {};\r\n            this.ListShares = {};\r\n\r\n            this.enumDBType = { table: \"mytables\", view: \"myviews\", sproc: \"myfunctions\", shares: \"myshares\" }; \r\n    \t\t\r\n            sandbox.setEvent({\r\n\t\t\t\ttype: \"click\",\r\n\t\t\t\tparent: \"#\" + this.moduleId,\r\n\t\t\t\tchild: \"a\",\r\n\t\t\t\tmethod: \"delegate\",\r\n\t\t\t\thandler: { context:this, method:this.handleEvent },\r\n\t\t\t\tmoduleId: this.moduleId\r\n\t\t\t});\r\n    \t\tsandbox.addListener([{\r\n\t\t\t\ttype: \"menu-success\",\r\n\t\t\t\tcontext: this,\r\n\t\t\t\tcallback: this.bindItemClick\r\n\t\t\t}]);\r\n    \t\t//TODO - Manejar menu y header con template\r\n            \r\n            this.loadSections"],[1,"\t\t\r\n            \r\n            this.loadMap"],[0,"();\r"]],"start1":286,"start2":286,"length1":742,"length2":50}]],"length":6093,"saved":false}
{"ts":1349434650076,"patch":[[{"diffs":[[0,"load"],[-1,"Sections"],[1,"Map"],[0,": fu"]],"start1":347,"start2":347,"length1":16,"length2":11}]],"length":6088,"saved":false}
{"ts":1349434692339,"patch":[[{"diffs":[[0,"\r\n    \t\t$(\"#"],[-1,"mainc"],[1,"centralC"],[0,"ontainer\").a"]],"start1":369,"start2":369,"length1":29,"length2":32}]],"length":6091,"saved":false}
{"ts":1349434706012,"patch":[[{"diffs":[[0,"esPath('"],[-1,"header"],[1,"mapView"],[0,"'), []))"]],"start1":447,"start2":447,"length1":22,"length2":23}]],"length":6092,"saved":false}
{"ts":1349434734658,"patch":[[{"diffs":[[0,");\r\n"],[-1,"\t\t\tthis.getMenu();\r\n\r\n\t\t},\r\n\t    adjustMainContent: function() {\r\n\t        var docH = $(document).height();\r\n\t        var headH = $(\"#headerContainer\").height();\r\n\t        var footH = $(\"#footer\").height();\r\n\r\n\t        $(\"#maincontainer\").height(docH - headH - footH - 130);\t        \r\n\t    },\r\n\r\n        getMenu: function(){\r\n            var self = this;\r\n            $.get('getMenu', function (res) {\r\n\r\n                self.MenuData = res.data;\r\n                self.showMenu();\r\n\r\n            });\r\n\t\t},\r\n\r\n    \t//this method will display the menu items returned by ajax call\r\n\t\tshowMenu: function(res){\r\n\t\t\tvar leftmenu = sandbox.getElement({\r\n\t\t\t\tselector: \"#leftMenu\"\r\n\t\t\t});\r\n            \r\n\t\t\t//loop over the returned json and display the elements\r\n            \r\n\t\t\tif(this.MenuData.length>0){\r\n\r\n\t\t\t\tfor (var i = 0; i < this.MenuData.length; i++) {\r\n                    var item = this.MenuData[i];\r\n                    var relpop = (item.inControl=='popover') ? 'popover' : '';\r\n                    var href = (item.inControl=='popover') ? '#' : item.ref;\r\n                    var $_li = $('<li id=\"itm_' + item.itemname + '\" class=\"pointer\" style=\"line-height:30px; color:' + item.color + '\"><a idData=\"' + item.id + '\" rel=\"' + relpop + '\" href=\"' + href + '\" class=\"text-shadow nolink\" style=\"color:' + item.color + '\"><i class=\"' + item.icon + ' icon-large text-shadow\"></i>  <small style=\"font-size:12px;\">' + item.text + '</small></a></li>');\r\n\r\n                    //setup some events and define a callback\r\n                    if(item.inControl=='popover')\r\n                    \tthis.initPopOver($_li, item);\r\n\r\n                    sandbox.domManipulation([{\r\n            \t\t\ttype: \"append\",\r\n        \t\t\t\twhere: leftmenu,\r\n        \t\t\t\twhat: $_li\r\n        \t\t\t}]);\r\n                    \r\n\t\t\t\t}\r\n\t\t\t}\r\n            \r\n\t\t},\r\n        //initialize the popover\r\n        initPopOver: function(el, item) {\r\n            var self = this;\r\n\r\n            el.clickover({\r\n                tip_id: item.itemname,\r\n                html: true,\r\n                title: item.text,\r\n                trigger:'click',\r\n                placement:'belowRight',\r\n                allow_multiple:false,\r\n                global_close: false,\r\n                //content: template,\r\n                onShown: function() { self.setContentPopOver(this, item, el) },\r\n                onHide: function() { $('ul#leftMenu li').removeClass('active'); }\r\n            });\r\n\r\n         \t$.ajax({ url: \"/\" + item.ref, async: true }).then(function(data) {\r\n       \t\t\t\r\n       \t\t\tswitch(item.ref)\r\n       \t\t\t{\r\n       \t\t\t\tcase self.enumDBType.table: self.ListSources.data = data.objectList; break;\r\n       \t\t\t\tcase self.enumDBType.sproc: self.ListFunctions.data = data.objectList; break;\r\n                    case self.enumDBType.shares: self.ListShares.data = data.objectList; break;\r\n       \t\t\t}\r\n       \t\t\t   \t\t\t \r\n        \t});           \r\n\r\n            $('.scrollbar').scrollbar();\r\n        },\r\n\r\n\t    setContentPopOver: function(pov, item, elem){\r\n\t        var self = this;\r\n\t        var list=[];\r\n\t        //Asign conten to POPOVER\r\n\t        pov.$tip.find('.popover-content > *').html(this.appendSources(item.ref));\r\n\r\n\t        $('.scrollbar').scrollbar();\r\n\r\n\t        $('ul#leftMenu li').removeClass('active');\r\n\t        elem.addClass('active');\r\n\t        var popheader = $(\"#\" + item.itemname).find(\"h3\");\r\n\t        var toolbtn;\r\n\t        if(item.toolbar.length > 0) {\r\n\t            toolbtn = $('<div class=\"pull-right\"><a href=\"#\" class=\"text-shadow nolink\" data-toggle=\"modal\" data-target=\"#loginform\" rel=\"tooltip\" role=\"button\" data-placement=\"right\" title=\"' + item.toolbar[0].tip + '\"><i class=\"' + item.toolbar[0].toolicon + ' \"></i></a></div>');\r\n\t            toolbtn.find('a[rel=tooltip]').tooltip();\r\n\t        }\r\n\t        popheader.append(toolbtn);\r\n\t        $('a[data-target=\"#loginform\"]').click(function(){\r\n\t        \talert('open dialog');\r\n\t        });\r\n\r\n\t    },\r\n\r\n        appendSources: function(who){\r\n\t\t\tvar self = this;\r\n\t\t\tvar template = null;\r\n\t\t\tvar pathTemplate = \"\";\r\n\t\t\tvar list = {};\r\n\t\t\tvar data = [];\r\n\t\t\tvar isRes = false;\r\n\t\t\tif(!self.ListSources.data || !self.ListFunctions.data || !self.ListShares.data)\r\n            {\r\n            \t$.ajax({ url: \"/\" + who, async: false }).then(function(data) {\r\n\t\t \t\t\tlist.data = data.objectList;\r\n\t\t \t\t\tdata = data.objectList;\r\n\t\t \t\t\tisRes = true;\r\n            \t});\r\n            }\r\n \t\t\tswitch(who)\r\n   \t\t\t{\r\n   \t\t\t\tcase self.enumDBType.table: \r\n   \t\t\t\t{\r\n   \t\t\t\t\tif(isRes)\r\n   \t\t\t\t\t\tself.ListSources.data \t= data;\t\r\n   \t\t\t\t\telse\r\n   \t\t\t\t\t\tlist.data = self.ListSources.data;\r\n   \t\t\t\t\tpathTemplate =sandbox.getTemplatesPath('listSources'); break;\r\n   \t\t\t\t}\r\n   \t\t\t\tcase self.enumDBType.view:  \r\n   \t\t\t\t{\r\n   \t\t\t\t\tif(isRes)\r\n   \t\t\t\t\t\tself.ListSources.data = data;\t\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tlist.data = self.ListSources.data;\r\n   \t\t\t\t\tpathTemplate =sandbox.getTemplatesPath('listViews'); break;\r\n   \t\t\t\t}\r\n   \t\t\t\tcase self.enumDBType.sproc:\r\n   \t\t\t\t{\r\n   \t\t\t\t\tif(isRes)\r\n   \t\t\t\t\t\tself.ListFunctions.data = data;\t\r\n   \t\t\t\t\telse\r\n   \t\t\t\t\t\tlist.data = self.ListFunctions.data\t\r\n   \t\t\t\t\tpathTemplate =sandbox.getTemplatesPath('listFunctions');break; \r\n   \t\t\t\t}\r\n       \t\t\tcase self.enumDBType.shares:\r\n   \t\t\t\t{\r\n   \t\t\t\t\tif(isRes)\r\n   \t\t\t\t\t\tself.ListShares.data = data;\t\r\n   \t\t\t\t\telse\r\n   \t\t\t\t\t\tlist.data = self.ListShares.data\t\r\n   \t\t\t\t\tpathTemplate = sandbox.getTemplatesPath('listShares');break; \r\n   \t\t\t\t}                   \r\n                   \r\n   \t\t\t}\r\n\r\n            template = sandbox.fetchTemplate(pathTemplate, list); \r\n\r\n            return template;          \r\n\t\t},"],[1,"\r\n\r\n\t\t}"],[0,"\r\n\r\n"]],"start1":469,"start2":469,"length1":5613,"length2":15}]],"length":494,"saved":false}
{"contributors":[],"silentsave":false,"ts":1349469127792,"patch":[[{"diffs":[[0," []));\r\n"],[1,"            \r\n            var url = 'http://api.tiles.mapbox.com/v3/mapbox.world-light.jsonp';\r\n            wax.tilejson(url, function(tilejson) {\r\n                // Set up a map in a div with the id 'modestmaps-setup'\r\n                var m = new MM.Map('MyMap',\r\n                  // Use Wax's connector to add a new custom layer\r\n                  new wax.mm.connector(tilejson),\r\n                  // And it'll be 240px by 120px\r\n                  new MM.Point(240,120));\r\n            \r\n                // Center it on the United States, at zoom level 2.\r\n                m.setCenterZoom({ lat: 39, lon: -98 }, 2);\r\n            });"],[0,"\r\n\r\n\t\t}\r"]],"start1":465,"start2":465,"length1":16,"length2":652}]],"length":1130,"saved":false}
{"ts":1349469202365,"patch":[[{"diffs":[[0,"\r\n\t};\r\n});\r\n"],[1,"app.start(\"map-module\");"]],"start1":1118,"start2":1118,"length1":12,"length2":36}]],"length":1154,"saved":false}
{"ts":1349469381384,"patch":[[{"diffs":[[0,"r\")."],[-1,"append"],[1,"html"],[0,"(san"]],"start1":396,"start2":396,"length1":14,"length2":12}]],"length":1152,"saved":false}
{"contributors":[],"silentsave":false,"ts":1349469805953,"patch":[[{"diffs":[[0,"\r\n    \t\t"],[1,"this.mm = com.modestmaps;"],[0,"\r\n      "]],"start1":284,"start2":284,"length1":16,"length2":41},{"diffs":[[0,"\r\n    \t\t"],[1,"//"],[0,"$(\"#cent"]],"start1":394,"start2":394,"length1":16,"length2":18}]],"length":1179,"saved":false}
{"ts":1349469851110,"patch":[[{"diffs":[[0,"    "],[-1,"var url = "],[1,"wax.tilejson("],[0,"'htt"]],"start1":520,"start2":520,"length1":18,"length2":21},{"diffs":[[0,"x.world-"],[-1,"l"],[1,"br"],[0,"ight.jso"]],"start1":574,"start2":574,"length1":17,"length2":18},{"diffs":[[0,"t.jsonp'"],[-1,";"],[1,","],[0,"\r\n      "]],"start1":587,"start2":587,"length1":17,"length2":17},{"diffs":[[0,"    "],[-1,"wax.tilejson(url,"],[1,"   "],[0," fun"]],"start1":606,"start2":606,"length1":25,"length2":11},{"diffs":[[0," {\r\n"],[-1,"                // Set up a map in a div with the id 'modestmaps-setup'\r\n"],[0,"    "]],"start1":632,"start2":632,"length1":81,"length2":8},{"diffs":[[0,"new "],[-1,"MM"],[1,"mm"],[0,".Map('"],[-1,"MyMap"],[1,"map-div"],[0,"',\r\n"]],"start1":660,"start2":660,"length1":21,"length2":23},{"diffs":[[0,"    "],[-1,"// Use Wax's connector to add a new custom layer"],[1,"new wax.mm.connector(tilejson));"],[0,"\r\n  "]],"start1":697,"start2":697,"length1":56,"length2":40},{"diffs":[[0,"    "],[-1,"  new "],[0,"wax.mm."],[-1,"connector(tilejson),\r\n                  // And it'll be 240px by 120px\r\n                  new MM.Point(240,120));\r\n            \r\n                // Center it on the United States, at zoom level 2."],[1,"zoomer(m, tilejson).appendTo(m.parent);"],[0,"\r\n  "]],"start1":747,"start2":747,"length1":217,"length2":54},{"diffs":[[0,"oom("],[-1,"{ lat: 39, lon:"],[1,"new mm.Location(39,"],[0," -98"],[-1," }"],[1,")"],[0,", 2)"]],"start1":827,"start2":827,"length1":29,"length2":32}]],"length":922,"saved":false}
{"ts":1349469965186,"patch":[[{"diffs":[[0,");\r\n"],[-1,"    \t\tthis.mm = com.modestmaps;\r\n"],[0,"    "]],"start1":282,"start2":282,"length1":41,"length2":8},{"diffs":[[0,");\r\n            "],[1,"var mm = com.modestmaps;"],[0,"\r\n            wa"]],"start1":461,"start2":461,"length1":32,"length2":56}]],"length":913,"saved":false}
{"ts":1349470122845,"patch":[[{"diffs":[[0,"tmaps;\r\n"],[1,"            \r\n"],[0,"        "]],"start1":495,"start2":495,"length1":16,"length2":30},{"diffs":[[0,");\r\n"],[-1,"                wax.mm.zoomer(m, tilejson).appendTo(m.parent);\r\n"],[0,"    "]],"start1":736,"start2":736,"length1":72,"length2":8}]],"length":863,"saved":false}
{"ts":1349477298274,"patch":[[{"diffs":[[0,"ap('"],[-1,"map-div"],[1,"MyMap"],[0,"',\r\n"]],"start1":673,"start2":673,"length1":15,"length2":13}]],"length":861,"saved":false}
{"ts":1349477412461,"patch":[[{"diffs":[[0,"    });\r"],[1,"\n            var layer = wax.mm.connector(tilejson)\r"],[0,"\n\r\n\t\t}\r\n"]],"start1":809,"start2":809,"length1":16,"length2":68}]],"length":913,"saved":false}
{"ts":1349477561109,"patch":[[{"diffs":[[0,"    var "],[1,"url = 'http://api.tiles.mapbox.com/v3/mapbox.geography-class.jsonp';\r\n            wax.tilejson(url, function(tilejson) {\r\n                var map = new MM.Map('MyMap', new wax.mm.connector(tilejson));\r\n            \r\n                wax.mm.interaction()\r\n                  .map(map)\r\n                  .tilejson(tilejson)\r\n                  .on(wax.tooltip().animate(true).parent(map.parent).events());\r\n            \r\n                map.setCenterZoom({ lat: 39, lon: -98 }, 1);\r\n              }\r\n            );            \r\n                        \r\n            /*var "],[0,"mm = com"]],"start1":473,"start2":473,"length1":16,"length2":584},{"diffs":[[0,"ejson)\r\n"],[1,"            */"],[0,"\r\n\t\t}\r\n\r"]],"start1":1430,"start2":1430,"length1":16,"length2":30}]],"length":1495,"saved":false}
{"ts":1349477710586,"patch":[[{"diffs":[[0,"  \r\n"],[-1,"                        \r\n            /*var mm = com.modestmaps;\r\n            \r\n            wax.tilejson('http://api.tiles.mapbox.com/v3/mapbox.world-bright.jsonp',\r\n                function(tilejson) {\r\n                var m = new mm.Map('MyMap',\r\n                  new wax.mm.connector(tilejson));\r\n                m.setCenterZoom(new mm.Location(39, -98), 2);\r\n            });\r\n            var layer = wax.mm.connector(tilejson)\r\n            */"],[0,"\r\n\t\t"]],"start1":1001,"start2":1001,"length1":455,"length2":8}]],"length":1048,"saved":false}
{"ts":1349477723562,"patch":[[{"diffs":[[0," {\r\n"],[-1,"\t\t//init and destroy methods REQUIRED"],[0,"\r\n\t\t"]],"start1":87,"start2":87,"length1":45,"length2":8}]],"length":1011,"saved":false}
{"ts":1349477965644,"patch":[[{"diffs":[[0,"    "],[-1,"\t\t//$(\"#centralContainer\").html(sandbox.fetchTemplate(sandbox.getTemplatesPath('mapView'), []))"],[1,"        var mm = com.modestmaps"],[0,";\r\n "]],"start1":326,"start2":326,"length1":103,"length2":39},{"diffs":[[0,"box."],[-1,"geography-class"],[1,"mapbox-light"],[0,".jso"]],"start1":421,"start2":421,"length1":23,"length2":20},{"diffs":[[0,"sonp';\r\n"],[1,"    \r\n"],[0,"        "]],"start1":439,"start2":439,"length1":16,"length2":22},{"diffs":[[0,"ar m"],[-1,"ap"],[0," = new "],[-1,"MM"],[1,"mm"],[0,".Map('"],[-1,"MyM"],[1,"m"],[0,"ap',"]],"start1":522,"start2":522,"length1":28,"length2":24},{"diffs":[[0,"son));\r\n    "],[-1,"        "],[0,"\r\n          "]],"start1":573,"start2":573,"length1":32,"length2":24},{"diffs":[[0,"    "],[-1,"wax.mm.interaction()\r\n                  .map(map)\r\n                  .tilejson(tilejson)\r\n                  .on(wax.tooltip().animate(true).parent(map.parent).events()"],[1,"m.setCenterZoom(new mm.Location(41.8827, -87.6233), 18);\r\n    \r\n                wax.mm.zoomer(m).appendTo(m.parent"],[0,");\r\n"]],"start1":599,"start2":599,"length1":175,"length2":122},{"diffs":[[0,"    "],[-1,"\r\n"],[0,"    "],[-1,"            map.setCenterZoom({ lat: 39, lon: -98 }, 1);\r\n              }\r\n            );  "],[1,"wax.mm.attribution(m, tilejson).appendTo(m.parent);\r\n            });"],[0,"    "]],"start1":729,"start2":729,"length1":105,"length2":80}]],"length":860,"saved":false}
{"ts":1349478762128,"patch":[[{"diffs":[[0,"ar m"],[-1,"m = com.modestmaps;\r\n            var url ="],[1,"ain = Map('map', {\r\n                // Specify the MapBox API url\r\n                api:"],[0," 'ht"]],"start1":339,"start2":339,"length1":50,"length2":95},{"diffs":[[0,"http://a"],[-1,"pi"],[0,".tiles.m"]],"start1":432,"start2":432,"length1":18,"length2":16},{"diffs":[[0,"/v3/"],[-1,"mapbox.mapbox-light"],[1,"examples.map-20v6611k,mapbox.dc-property-values"],[0,".jsonp'"],[-1,";"],[1,","],[0,"\r\n    "],[-1,"\r\n            wax.tilejson(url, function(tilejson) {\r\n                var m = new mm.Map('map', new wax.mm.connector(tilejson));\r\n    \r\n                m.setCenterZoom(new mm.Location(41.8827, -87.6233), 18);\r\n    \r\n                wax.mm.zoomer(m).appendTo(m.parent);\r\n                wax.mm.attribution(m, tilejson).appendTo(m.parent);"],[1,"            center: {\r\n                    lat: 38.9090033656251,      // Intial center point and zoom level.\r\n                    lon: -77.014396158891,      // To find coordinates and zoom levels\r\n                    zoom: 13                    // try: http://www.getlatlon.com\r\n                },\r\n                zoomRange: [0, 15],             // Limit zooming on the map to these levels\r\n                features: [                     // Map features (see readme.md)\r\n                    'zoomwheel',\r\n                    'movetips',\r\n                    'zoombox',\r\n                    'zoompan',\r\n                    'share'\r\n                ]"],[0,"\r\n  "]],"start1":457,"start2":457,"length1":378,"length2":721},{"diffs":[[0,"        "],[-1," "],[0,"\r\n\r\n\t\t}\r"]],"start1":1192,"start2":1192,"length1":17,"length2":16}]],"length":1245,"saved":false}
{"ts":1349478804849,"patch":[[{"diffs":[[0,"        "],[1,"this.mainMap= null;"],[0,"\r\n      "]],"start1":253,"start2":253,"length1":16,"length2":35},{"diffs":[[0,"    "],[-1,"var "],[0,"main"],[1,"Map"],[0," = M"]],"start1":353,"start2":353,"length1":16,"length2":15}]],"length":1263,"saved":false}
{"contributors":[],"silentsave":false,"ts":1349484912050,"patch":[[{"diffs":[[0,"http://a"],[1,"pi"],[0,".tiles.m"]],"start1":450,"start2":450,"length1":16,"length2":18},{"diffs":[[0,"/v3/"],[-1,"examples.map-20v6611k,mapbox.dc-property-value"],[1,"mapbox.mapbox-street"],[0,"s.js"]],"start1":477,"start2":477,"length1":54,"length2":28}]],"length":1239,"saved":false}
{"contributors":[],"silentsave":false,"ts":1349707486371,"patch":[[{"diffs":[[0,"a/view\r\n"],[1,"        \r\n"],[0,"\t\tinit: "]],"start1":123,"start2":123,"length1":16,"length2":26},{"diffs":[[0,"     });"],[1,"\r\n            \r\n            main.layers({\r\n                custom: { api: 'http://a.tiles.mapbox.com/v3/mapbox.dc-crime-robbery.jsonp' }\r\n            });   "],[0,"        "]],"start1":1187,"start2":1187,"length1":16,"length2":172}]],"length":1405,"saved":false}
{"ts":1349707643747,"patch":[[{"diffs":[[0,"p://"],[-1,"a.tiles.mapbox.com/v3/mapbox.dc-crime-robbery.jsonp"],[1,"localhost:4000/database/pgs_buenos_aires/table/lineas-subte/{z}/{x}/{y}"],[0,"' }\r"]],"start1":1273,"start2":1273,"length1":59,"length2":79}]],"length":1425,"saved":false}
{"ts":1349708513322,"patch":[[{"diffs":[[0,"    main"],[1,"Map"],[0,".layers("]],"start1":1219,"start2":1219,"length1":16,"length2":19}]],"length":1428,"saved":false}
{"ts":1349709417845,"patch":[[{"diffs":[[0,"            "],[1,"this."],[0,"mainMap = Ma"]],"start1":355,"start2":355,"length1":24,"length2":29},{"diffs":[[0,"        "],[-1,"\r\n            "],[1,"var baseURL = \"http://localhost:4000/database/<%= dbname %>/table/<%= table %>/{z}/{x}/{y}\";\r\n            var tilejson = {\r\n                tilejson: '1.0.0',\r\n                scheme: 'xyz',\r\n                tiles: [],\r\n                grids: [],\r\n                formatter: function(options, data) { return data.id }\r\n            };\r\n            \r\n            tilejson.tiles = [url + '.png'];\r\n            tilejson.grids = [url + '.grid.json'];            \r\n            \r\n            this."],[0,"mainMap."]],"start1":1206,"start2":1206,"length1":30,"length2":506}]],"length":1909,"saved":false}
{"ts":1349709436976,"patch":[[{"diffs":[[0,"\r\n            \r\n"],[1,"            var url = _.template(baseURL, {dbname: dbname, table: table});\r\n            \r\n"],[0,"            tile"]],"start1":1547,"start2":1547,"length1":32,"length2":122}]],"length":1999,"saved":false}
{"ts":1349709462971,"patch":[[{"diffs":[[0,"me: "],[-1,"dbname, table: table"],[1,"'pgs_buenos_aires', table: 'lineas-subte'"],[0,"});\r"]],"start1":1610,"start2":1610,"length1":28,"length2":49}]],"length":2020,"saved":false}
{"ts":1349709516893,"patch":[[{"diffs":[[0,"];            \r\n"],[1,"            var testMap = new wax.mm.connector(tilejson));\r\n"],[0,"            \r\n  "]],"start1":1768,"start2":1768,"length1":32,"length2":92}]],"length":2080,"saved":false}
{"ts":1349709529088,"patch":[[{"diffs":[[0,"ilejson)"],[-1,")"],[0,";\r\n     "]],"start1":1832,"start2":1832,"length1":17,"length2":16}]],"length":2079,"saved":false}
{"ts":1349709609867,"patch":[[{"diffs":[[0,"om: "],[-1,"{ api: 'http://localhost:4000/database/pgs_buenos_aires/table/lineas-subte/{z}/{x}/{y}' }"],[1,"testMap"],[0,"\r\n  "]],"start1":1912,"start2":1912,"length1":97,"length2":15}]],"length":1997,"saved":false}
{"contributors":[],"silentsave":false,"ts":1349795645724,"patch":[[{"diffs":[[0," });"],[-1,"\r\n            var baseURL = \"http://localhost:4000/database/<%= dbname %>/table/<%= table %>/{z}/{x}/{y}\";\r\n            var tilejson = {\r\n                tilejson: '1.0.0',\r\n                scheme: 'xyz',\r\n                tiles: [],\r\n                grids: [],\r\n                formatter: function(options, data) { return data.id }\r\n            };\r\n            \r\n            var url = _.template(baseURL, {dbname: 'pgs_buenos_aires', table: 'lineas-subte'});\r\n            \r\n            tilejson.tiles = [url + '.png'];\r\n            tilejson.grids = [url + '.grid.json'];            \r\n            var testMap = new wax.mm.connector(tilejson);\r\n            \r\n            this.mainMap.layers({\r\n                custom: testMap\r\n            });    "],[0,"    "]],"start1":1196,"start2":1196,"length1":752,"length2":8}]],"length":1253,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350342294173,"patch":[[{"diffs":[[0,"     });"],[1,"\r\n            this.mainMap.layers({\r\n\r\n                subtes: { \r\n                    api: 'http://127.0.0.1:8888',\r\n                    center: { zoom: 12, ease: 1000 }\r\n                }\r\n            });            \r\n    "],[0,"        "]],"start1":1192,"start2":1192,"length1":16,"length2":240}]],"length":1477,"saved":false}
{"ts":1350342410567,"patch":[[{"diffs":[[0,"0.1:8888"],[1,"/{z}/{x}/{y}.png"],[0,"',\r\n    "]],"start1":1306,"start2":1306,"length1":16,"length2":32}]],"length":1493,"saved":false}
{"ts":1350342537935,"patch":[[{"diffs":[[0,".1:8888/"],[1,"subtes/"],[0,"{z}/{x}/"]],"start1":1307,"start2":1307,"length1":16,"length2":23}]],"length":1500,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350343453690,"patch":[[{"diffs":[[0,"at: "],[-1,"38.9090033656251"],[1,"-34.5875"],[0,",   "]],"start1":575,"start2":575,"length1":24,"length2":16},{"diffs":[[0,"n: -"],[-1,"77.014396158891"],[1,"58.6725"],[0,",   "]],"start1":656,"start2":656,"length1":23,"length2":15}]],"length":1484,"saved":false}
{"ts":1350343624510,"patch":[[{"diffs":[[0,"m: 1"],[-1,"3        "],[1,"0"],[0,"    "]],"start1":737,"start2":737,"length1":17,"length2":9},{"diffs":[[0,"tlon.com"],[1," or http://freegeoip.net/json/201.250.58.50"],[0,"\r\n      "]],"start1":778,"start2":778,"length1":16,"length2":59}]],"length":1519,"saved":false}
{"ts":1350343803643,"patch":[[{"diffs":[[0,"34.5"],[-1,"875"],[1,"767"],[0,",   "]],"start1":580,"start2":580,"length1":11,"length2":11},{"diffs":[[0,"-58."],[-1,"6725"],[1,"437"],[0,",   "]],"start1":659,"start2":659,"length1":12,"length2":11}]],"length":1518,"saved":false}
{"ts":1350344447315,"patch":[[{"diffs":[[0,"     });"],[1,"\r\n"],[0,"        "]],"start1":1439,"start2":1439,"length1":16,"length2":18},{"diffs":[[0,"        "],[1,"this.mainMap.setOverlay(\"subtes\");"],[0,"\r\n      "]],"start1":1453,"start2":1453,"length1":16,"length2":50}]],"length":1554,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350351718669,"patch":[[{"diffs":[[0,"tion(){\r"],[1,"\n            var sources = app.getModuleData(\"leftMenu\").getSources();\r"],[0,"\n\r\n     "]],"start1":344,"start2":344,"length1":16,"length2":87},{"diffs":[[0,");\r\n"],[-1,"            this.mainMap.setOverlay(\"subtes\");\r\n"],[0,"    "]],"start1":1516,"start2":1516,"length1":56,"length2":8}]],"length":1577,"saved":false}
{"ts":1350352204328,"patch":[[{"diffs":[[0,"           });\r\n"],[1,"            _.forEach(sources, \r\n    "],[0,"            this"]],"start1":1275,"start2":1275,"length1":32,"length2":69},{"diffs":[[0,"yers({\r\n"],[-1,"\r\n"],[0,"        "]],"start1":1355,"start2":1355,"length1":18,"length2":16},{"diffs":[[0,"        "],[1,"    "],[0,"subtes: "]],"start1":1371,"start2":1371,"length1":16,"length2":20},{"diffs":[[0,"es: { \r\n"],[1,"    "],[0,"        "]],"start1":1387,"start2":1387,"length1":16,"length2":20},{"diffs":[[0,"                "],[1,"    "],[0,"center: { zoom: "]],"start1":1477,"start2":1477,"length1":32,"length2":36},{"diffs":[[0,"        "],[1,"    "],[0,"}\r\n     "]],"start1":1539,"start2":1539,"length1":16,"length2":20},{"diffs":[[0," }\r\n            "],[1,"  "],[1,"  "],[0,"})"],[-1,";"],[0,"\r\n            \r\n"]],"start1":1550,"start2":1550,"length1":35,"length2":38},{"diffs":[[0,"        "],[1,");"],[0,"\r\n\r\n\t\t}\r"]],"start1":1578,"start2":1578,"length1":16,"length2":18}]],"length":1633,"saved":false}
{"ts":1350352342849,"patch":[[{"diffs":[[0,"ources, "],[1,"function(value) {"],[0,"\r\n"],[-1,""],[0,"        "]],"start1":1314,"start2":1314,"length1":18,"length2":35},{"diffs":[[0,".1:8888/"],[-1,"subtes"],[1,"' + value + '"],[0,"/{z}/{x}"]],"start1":1456,"start2":1456,"length1":22,"length2":29},{"diffs":[[0,"    })\r\n"],[-1,""],[0,"        "]],"start1":1590,"start2":1590,"length1":16,"length2":16},{"diffs":[[0,"        "],[1,"}"],[0,");\r\n\r\n\t\t"]],"start1":1602,"start2":1602,"length1":16,"length2":17}]],"length":1658,"saved":false}
{"ts":1350352356708,"patch":[[{"diffs":[[0,"png'"],[-1,",\r\n                        center: { zoom: 12, ease: 1000 }"],[0,"\r\n  "]],"start1":1490,"start2":1490,"length1":67,"length2":8}]],"length":1599,"saved":false}
{"ts":1350352362140,"patch":[[{"diffs":[[0,"      })"],[1,";"],[0,"\r\n      "]],"start1":1529,"start2":1529,"length1":16,"length2":17}]],"length":1600,"saved":false}
{"ts":1350352639121,"patch":[[{"diffs":[[0,"tMenu\")."],[1,"instance."],[0,"getSourc"]],"start1":401,"start2":401,"length1":16,"length2":25}]],"length":1609,"saved":false}
{"ts":1350353000462,"patch":[[{"diffs":[[0,"\n});"],[-1,"\r\napp.start(\"map-module\");"]],"start1":1579,"start2":1579,"length1":30,"length2":4}]],"length":1583,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350354098974,"patch":[[{"diffs":[[0," + value"],[1,".Objectname"],[0," + '/{z}"]],"start1":1474,"start2":1474,"length1":16,"length2":27}]],"length":1594,"saved":false}
{"ts":1350358441522,"patch":[[{"diffs":[[0,"unction(){\r\n"],[1,"            var self = this;\r\n"],[0,"            "]],"start1":341,"start2":341,"length1":24,"length2":54},{"diffs":[[0,"\r\n\r\n            "],[-1,"this"],[1,"self"],[0,".mainMap = Map('"]],"start1":461,"start2":461,"length1":36,"length2":36},{"diffs":[[0,"                "],[-1,"this"],[1,"self"],[0,".mainMap.layers("]],"start1":1380,"start2":1380,"length1":36,"length2":36}]],"length":1624,"saved":false}
{"ts":1350358447164,"patch":[[{"diffs":[[0,"e.Object"],[-1,"n"],[1,"N"],[0,"ame + '/"]],"start1":1511,"start2":1511,"length1":17,"length2":17}]],"length":1624,"saved":false}
{"ts":1350358567469,"patch":[[{"diffs":[[0,"n(value) {\r\n"],[1,"                if(value) {\r\n    "],[0,"            "]],"start1":1368,"start2":1368,"length1":24,"length2":57},{"diffs":[[0,"        "],[1," "],[1,"   "],[0,"subtes: "]],"start1":1464,"start2":1464,"length1":16,"length2":20},{"diffs":[[0,"es: { \r\n"],[1,"    "],[0,"        "]],"start1":1480,"start2":1480,"length1":16,"length2":20},{"diffs":[[0,"        "],[-1,"}\r\n"],[1,"    }\r\n    "],[0,"        "]],"start1":1599,"start2":1599,"length1":19,"length2":27},{"diffs":[[0,"           });\r\n"],[1,"                }\r\n"],[0,"            });\r"]],"start1":1623,"start2":1623,"length1":32,"length2":51}]],"length":1692,"saved":false}
{"ts":1350359651343,"patch":[[{"diffs":[[0,"\r\n\t*/\r\n\t"],[1,"var mainMap;\r\n    "],[0,"return {"]],"start1":73,"start2":73,"length1":16,"length2":34}]],"length":1710,"saved":false}
{"ts":1350359678897,"patch":[[{"diffs":[[0,"        "],[-1,"this."],[0,"mainMap="]],"start1":281,"start2":281,"length1":21,"length2":16},{"diffs":[[0,"            "],[-1,"self."],[0,"mainMap = Ma"]],"start1":478,"start2":478,"length1":29,"length2":24},{"diffs":[[0,"    "],[-1,"self."],[0,"main"]],"start1":1433,"start2":1433,"length1":13,"length2":8}]],"length":1695,"saved":false}
{"ts":1350360247502,"patch":[[{"diffs":[[0," null;\r\n"],[1,"    \t\tsandbox.setEvent([{\r\n\t\t\t\ttype: \"click\",\r\n\t\t\t\tparent: \"#\" + this.moduleId,\r\n\t\t\t\tchild: \"a\",\r\n\t\t\t\tmethod: \"delegate\",\r\n\t\t\t\thandler: {context:this, method:this.handleLayerEvent},\r\n\t\t\t\tmoduleId: this.moduleId\r\n\t\t\t});            \r\n            \r\n"],[0,"        "]],"start1":297,"start2":297,"length1":16,"length2":262}]],"length":1941,"saved":false}
{"ts":1350360291485,"patch":[[{"diffs":[[0,"arent: \""],[-1,"#\" + this.moduleId"],[1,"li\""],[0,",\r\n\t\t\t\tc"]],"start1":357,"start2":357,"length1":34,"length2":19}]],"length":1926,"saved":false}
{"ts":1350360321695,"patch":[[{"diffs":[[0,"ld: "],[-1,"\"a\""],[1,"'[data-control=\"layer\"]'"],[0,",\r\n\t"]],"start1":378,"start2":378,"length1":11,"length2":32}]],"length":1947,"saved":false}
{"ts":1350360353913,"patch":[[{"diffs":[[0,";\r\n\r\n\t\t}"],[1,",\r\n        handleLayerEvent: function() {\r\n        \r\n        \r\n        },"],[0,"\r\n\r\n\t};\r"]],"start1":1927,"start2":1927,"length1":16,"length2":89}]],"length":2020,"saved":false}
{"ts":1350360357115,"patch":[[{"diffs":[[0,");\r\n\r\n\t\t},\r\n"],[1,"        \r\n"],[0,"        hand"]],"start1":1926,"start2":1926,"length1":24,"length2":34}]],"length":2030,"saved":false}
{"ts":1350360407021,"patch":[[{"diffs":[[0,"on() {\r\n        "],[1,"    var $this = $(this),\r\n                id = $this.attr('href');"],[0,"\r\n        \r\n    "]],"start1":1980,"start2":1980,"length1":32,"length2":98}]],"length":2096,"saved":false}
{"ts":1350360512195,"patch":[[{"diffs":[[0,"unction("],[1,"e"],[0,") {\r\n   "]],"start1":1975,"start2":1975,"length1":16,"length2":17},{"diffs":[[0,"var "],[-1,"$this = $(this),\r\n                id = $this"],[1,"id = $(e.currentTarget.id)"],[0,".att"]],"start1":2001,"start2":2001,"length1":52,"length2":34}]],"length":2079,"saved":false}
{"ts":1350360548202,"patch":[[{"diffs":[[0,"ref');\r\n        "],[1,"    id = id.replace(/.*(?=#[^\\s]+$)/, '').slice(1);\r\n            "],[0,"\r\n        },\r\n\r\n"]],"start1":2039,"start2":2039,"length1":32,"length2":97}]],"length":2144,"saved":false}
{"ts":1350360617896,"patch":[[{"diffs":[[0,".slice(1);\r\n"],[1,"            if($this.hasClass('active')) {\r\n                $('[data-control=\"layer\"]').removeClass('active');\r\n                mainMap.removeOverlay(id);        \r\n            } else {\r\n                $('[data-control=\"layer\"]').removeClass('active');\r\n                $this.addClass('active');\r\n                mainMap.setOverlay(id);\r\n            }            \r\n"],[0,"            "]],"start1":2096,"start2":2096,"length1":24,"length2":389}]],"length":2509,"saved":false}
{"ts":1350360625021,"patch":[[{"diffs":[[0,"       }"],[-1,","],[0,"\r\n\r\n\t};\r"]],"start1":2488,"start2":2488,"length1":17,"length2":16}]],"length":2508,"saved":false}
{"ts":1350360734085,"patch":[[{"diffs":[[0,"Id\r\n\t\t\t}"],[1,"]"],[0,");      "]],"start1":519,"start2":519,"length1":16,"length2":17}]],"length":2509,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350361044582,"patch":[[{"diffs":[[0,"d: \""],[-1,"delegate"],[1,"bind"],[0,"\",\r\n"]],"start1":418,"start2":418,"length1":16,"length2":12}]],"length":2505,"saved":false}
{"ts":1350361162319,"patch":[[{"diffs":[[0,"erEvent:"],[1," function() {\r\n            \r\n            $('body').on('click.map', '[data-control=\"layer\"]',"],[0," functio"]],"start1":1962,"start2":1962,"length1":16,"length2":108},{"diffs":[[0,"            "],[1,"  "],[1,"  "],[0,"var id = $(e"]],"start1":2078,"start2":2078,"length1":24,"length2":28},{"diffs":[[0,"r('href');\r\n"],[1,"    "],[0,"            "]],"start1":2128,"start2":2128,"length1":24,"length2":28},{"diffs":[[0,"        "],[1,"  "],[1,"  "],[0,"if($this"]],"start1":2209,"start2":2209,"length1":16,"length2":20},{"diffs":[[0,"ctive')) {\r\n"],[1,"    "],[0,"            "]],"start1":2241,"start2":2241,"length1":24,"length2":28},{"diffs":[[0,"                "],[1,"   "],[1," "],[0,"mainMap.removeOv"]],"start1":2325,"start2":2325,"length1":32,"length2":36},{"diffs":[[0,"        "],[1,"    "],[0,"} else {"]],"start1":2385,"start2":2385,"length1":16,"length2":20},{"diffs":[[0,"                "],[1,"   "],[1," "],[0,"$('[data-control"]],"start1":2407,"start2":2407,"length1":32,"length2":36},{"diffs":[[0,"        "],[1,"    "],[0,"$this.ad"]],"start1":2487,"start2":2487,"length1":16,"length2":20},{"diffs":[[0,"                "],[1,"   "],[1," "],[0,"mainMap.setOverl"]],"start1":2526,"start2":2526,"length1":32,"length2":36},{"diffs":[[0,"        "],[-1,"}"],[1,"    }\r\n"],[0,"        "]],"start1":2575,"start2":2575,"length1":17,"length2":23},{"diffs":[[0," }\r\n            "],[1,"}"],[0,"\r\n            \r\n"]],"start1":2586,"start2":2586,"length1":32,"length2":33}]],"length":2640,"saved":false}
{"ts":1350361189396,"patch":[[{"diffs":[[0,"var "],[-1,"id = $(e.currentTarget.id).attr('href');"],[1,"$this = $(this),\r\n                    id = $this.attr('href');\r\n                "],[0,"\r\n  "]],"start1":2094,"start2":2094,"length1":48,"length2":88}]],"length":2680,"saved":false}
{"ts":1350361225490,"patch":[[{"diffs":[[0,"    "],[-1,"\t\tsandbox.setEvent([{\r\n\t\t\t\ttype: \"click\",\r\n\t\t\t\tparent: \"li\",\r\n\t\t\t\tchild: '[data-control=\"layer\"]',\r\n\t\t\t\tmethod: \"bind\",\r\n\t\t\t\thandler: {context:this, method:this.handleLayerEvent},\r\n\t\t\t\tmoduleId: this.moduleId\r\n\t\t\t}]);            \r\n            "],[1,"        \r\n            this.handleLayerEvent();"],[0,"\r\n  "]],"start1":305,"start2":305,"length1":251,"length2":54}]],"length":2483,"saved":false}
{"ts":1350361284225,"patch":[[{"diffs":[[0,"}\r\n            }"],[1,");"],[0,"\r\n            \r\n"]],"start1":2430,"start2":2430,"length1":32,"length2":34}]],"length":2485,"saved":false}
{"ts":1350361315067,"patch":[[{"diffs":[[0,".slice(1);\r\n"],[1,"                \r\n                e.preventDefault();\r\n                \r\n"],[0,"            "]],"start1":2036,"start2":2036,"length1":24,"length2":97}]],"length":2558,"saved":false}
{"ts":1350361417882,"patch":[[{"diffs":[[0,"    "],[1,"lineas"],[0,"subte"],[-1,"s"],[0,": { "]],"start1":1527,"start2":1527,"length1":14,"length2":19}]],"length":2563,"saved":false}
{"ts":1350361454390,"patch":[[{"diffs":[[0,"    "],[-1,"lineassubt"],[1,"value.ObjectNam"],[0,"e: {"]],"start1":1527,"start2":1527,"length1":18,"length2":23}]],"length":2568,"saved":false}
{"ts":1350361559201,"patch":[[{"diffs":[[0,"jectName"],[1,".toString()"],[0,": { \r\n  "]],"start1":1539,"start2":1539,"length1":16,"length2":27}]],"length":2579,"saved":false}
{"ts":1350361632028,"patch":[[{"diffs":[[0,"        "],[-1,"value.ObjectNam"],[1,"lineassubt"],[0,"e.toStri"]],"start1":1523,"start2":1523,"length1":31,"length2":26}]],"length":2574,"saved":false}
{"ts":1350361656668,"patch":[[{"diffs":[[0,"ubte"],[-1,".toString()"],[0,": { "]],"start1":1538,"start2":1538,"length1":19,"length2":8}]],"length":2563,"saved":false}
{"ts":1350362086444,"patch":[[{"diffs":[[0,");\r\n"],[-1,"            _.forEach(sources, function(value) {\r\n                if(value) {\r\n        "],[0,"    "]],"start1":1386,"start2":1386,"length1":95,"length2":8},{"diffs":[[0,"        "],[-1,"        "],[0,"lineassu"]],"start1":1428,"start2":1428,"length1":24,"length2":16},{"diffs":[[0,"            "],[-1,"    "],[-1,"    "],[0,"api: 'http:/"]],"start1":1461,"start2":1461,"length1":32,"length2":24},{"diffs":[[0,"888/"],[-1,"' + value.ObjectName + '"],[1,"lineassubte"],[0,"/{z}"]],"start1":1497,"start2":1497,"length1":32,"length2":19},{"diffs":[[0,"g'\r\n            "],[1,"    }\r\n"],[0,"            }\r\n "]],"start1":1527,"start2":1527,"length1":32,"length2":39},{"diffs":[[0,"}\r\n            }"],[1,");"],[0,"\r\n              "]],"start1":1547,"start2":1547,"length1":32,"length2":34},{"diffs":[[0,"            "],[-1,"        });"],[1,"_.forEach(sources, function(value) {\r\n                if(value) {\r\n"],[0,"\r\n          "]],"start1":1567,"start2":1567,"length1":35,"length2":91}]],"length":2512,"saved":false}
{"ts":1350362536051,"patch":[[{"diffs":[[0,"bte/"],[-1,"{z}/{x}"],[1,"0/0"],[0,"/{y}"]],"start1":1509,"start2":1509,"length1":15,"length2":11}]],"length":2508,"saved":false}
{"ts":1350362622898,"patch":[[{"diffs":[[0,"0/0/"],[-1,"{y}"],[1,"0"],[0,".png"]],"start1":1513,"start2":1513,"length1":11,"length2":9}]],"length":2506,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350386830929,"patch":[[{"diffs":[[0,"bte/"],[-1,"0/0/0"],[1,"{z}/{x}/{y}"],[0,".png"]],"start1":1509,"start2":1509,"length1":13,"length2":19}]],"length":2512,"saved":false}
{"ts":1350386842133,"patch":[[{"diffs":[[0,"p://"],[-1,"127.0.0.1:8888"],[1,"tiles.appgis.com"],[0,"/lin"]],"start1":1482,"start2":1482,"length1":22,"length2":24}]],"length":2514,"saved":false}
{"ts":1350387168564,"patch":[[{"diffs":[[0,"           api: "],[1,"["],[0,"'http://tiles.ap"]],"start1":1462,"start2":1462,"length1":32,"length2":33},{"diffs":[[0,"{y}.png'"],[1,"]"],[0,"\r\n      "]],"start1":1524,"start2":1524,"length1":16,"length2":17}]],"length":2516,"saved":false}
{"ts":1350387377003,"patch":[[{"diffs":[[0,"   api: "],[-1,"["],[0,"'http://"]],"start1":1470,"start2":1470,"length1":17,"length2":16},{"diffs":[[0,"{y}.png'"],[-1,"]"],[1,",\r\n                    center: {\r\n                        lat: -34.5767,      // Intial center point and zoom level.\r\n                        lon: -58.437,      // To find coordinates and zoom levels\r\n                        zoom: 10            // try: http://www.getlatlon.com or http://freegeoip.net/json/201.250.58.50\r\n                    }"],[0,"\r\n      "]],"start1":1523,"start2":1523,"length1":17,"length2":359}]],"length":2857,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350566708265,"patch":[[{"diffs":[[0,"            "],[1,"/*"],[0,"mainMap = Ma"]],"start1":530,"start2":530,"length1":24,"length2":26},{"diffs":[[0,"     });"],[1,"*/"],[0,"\r\n\r\n\t\t},"]],"start1":2021,"start2":2021,"length1":16,"length2":18}]],"length":2861,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350567929384,"patch":[[{"diffs":[[0,"ces();\r\n"],[1,"            Map.setOverlay();"],[0,"\r\n      "]],"start1":520,"start2":520,"length1":16,"length2":45}]],"length":2890,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350612417442,"patch":[[{"diffs":[[0,"    "],[-1,"var sources = app.getModuleData(\"leftMenu\").instance.getSources();\r\n            Map.setOverlay();"],[1,"\r\n            "],[0,"\r\n  "]],"start1":456,"start2":456,"length1":105,"length2":22}]],"length":2807,"saved":false}
{"ts":1350612456100,"patch":[[{"diffs":[[0,"            "],[1,"this."],[0,"mainMap= nul"]],"start1":277,"start2":277,"length1":24,"length2":29},{"diffs":[[0," null;\r\n"],[1,"            this.baseURL = \"http://tiles.appgis.com/database/<%= dbname %>/table/<%= table %>/{z}/{x}/{y}\";\r\n"],[0,"        "]],"start1":302,"start2":302,"length1":16,"length2":125}]],"length":2921,"saved":false}
{"ts":1350612511172,"patch":[[{"diffs":[[0,"\";\r\n            "],[1,"this.layers = [];\r\n            this.tilejson = {\r\n                tilejson: '1.0.0',\r\n                scheme: 'xyz',\r\n                tiles: [],\r\n                grids: [],\r\n                formatter: function(options, data) { return data.id }\r\n            };"],[0,"\r\n            th"]],"start1":415,"start2":415,"length1":32,"length2":291}]],"length":3180,"saved":false}
{"ts":1350612767967,"patch":[[{"diffs":[[0,"/{y}\";\r\n"],[1,"            this.baseStyleURL = \"http://tiles.appgis.com/database/<%= dbname %>/table/<%= table %>\";\r\n"],[0,"        "]],"start1":411,"start2":411,"length1":16,"length2":118},{"diffs":[[0,"    };\r\n"],[1,"            \r\n"],[0,"        "]],"start1":786,"start2":786,"length1":16,"length2":30}]],"length":3296,"saved":false}
{"ts":1350612847911,"patch":[[{"diffs":[[0,"p= n"],[-1,"ull"],[1,"ew L.Map('mymap')"],[0,";\r\n "]],"start1":300,"start2":300,"length1":11,"length2":25}]],"length":3310,"saved":false}
{"ts":1350613187286,"patch":[[{"diffs":[[0,"p= n"],[-1,"ew L.Map('mymap')"],[1,"ull"],[0,";\r\n "]],"start1":300,"start2":300,"length1":25,"length2":11},{"diffs":[[0," this;\r\n"],[1,"            wax.tilejson('http://api.tiles.mapbox.com/v2/mapbox.geography-class.jsonp',\r\n                function(tilejson) {\r\n                this.mainMap = new L.Map('mymap')\r\n                    .addLayer(new wax.leaf.connector(tilejson))\r\n                    .setView(new L.LatLng(51, 0), 1);\r\n            });"],[0,"        "]],"start1":929,"start2":929,"length1":16,"length2":329}]],"length":3609,"saved":false}
{"ts":1350613215990,"patch":[[{"diffs":[[0,"lejson('http"],[1,"http"],[0,"://api.tiles"]],"start1":955,"start2":955,"length1":24,"length2":28},{"diffs":[[0,"om/v"],[-1,"2"],[1,"3"],[0,"/mapbox."],[-1,"geography-clas"],[1,"mapbox-street"],[0,"s.js"]],"start1":992,"start2":992,"length1":31,"length2":30}]],"length":3612,"saved":false}
{"ts":1350613253339,"patch":[[{"diffs":[[0,"Lng("],[-1,"51, 0"],[1,"-34.5767, -58.437"],[0,"), 1"],[1,"0"],[0,");\r\n"]],"start1":1221,"start2":1221,"length1":17,"length2":30}]],"length":3625,"saved":false}
{"ts":1350613274176,"patch":[[{"diffs":[[0,"                "],[-1,"this"],[1,"self"],[0,".mainMap = new L"]],"start1":1067,"start2":1067,"length1":36,"length2":36}]],"length":3625,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350614608559,"patch":[[{"diffs":[[0,"his."],[-1,"mainMap= null;\r\n            this."],[0,""],[1,""],[0,"base"]],"start1":290,"start2":290,"length1":41,"length2":8},{"diffs":[[0,"},\r\n"],[-1,"\t\tloadMap:"],[1,"        Map: function(el, l, callback) {\r\n            wax.tilejson(l.api,"],[0," fun"]],"start1":846,"start2":846,"length1":18,"length2":81},{"diffs":[[0,"unction("],[-1,")"],[1,"t) "],[0,"{\r\n     "]],"start1":925,"start2":925,"length1":17,"length2":19},{"diffs":[[0,"    "],[1," "],[1,"   "],[0,"var "],[-1,"self = this;\r\n            wax.tilejson('httphttp://api.tiles.mapbox.com/v3/mapbox.mapbox-streets.jsonp',\r\n                function(tilejson) {\r\n                self.mainMap = new L.Map('mymap')\r\n                    .addLayer(new wax.leaf.connector(tilejson))\r\n                    .setView(new L.LatLng(-34.5767, -58.437), 10);\r\n            }); "],[1,"handlers = [\r\n                    new MM.DragHandler(),\r\n                    new MM.DoubleClickHandler(),\r\n                    new MM.TouchHandler()\r\n                ];\r\n                if ($.inArray('zoomwheel', l.features) >= 0) {\r\n                    handlers.push(new MM.MouseWheelHandler());\r\n                }\r\n    \r\n                MM_map = new MM.Map(el, new wax.mm.connector(t), null, handlers);\r\n                MM_map.setCenterZoom({\r\n                    lat: (l.center) ? l.center.lat : t.center[1],\r\n                    lon: (l.center) ? l.center.lon : t.center[0]\r\n                }, (l.center) ? l.center.zoom : t.center[2]);\r\n    \r\n                if (l.zoomRange) {\r\n                    MM_map.setZoomRange(l.zoomRange[0], l.zoomRange[1]);\r\n                } else {\r\n                    MM_map.setZoomRange(t.minzoom, t.maxzoom);\r\n                }\r\n    \r\n                wax.mm.attribution(MM_map, t).appendTo(MM_map.parent);\r\n    \r\n                for (var i = 0; i < l.features.length; i++) {\r\n                    switch(l.features[i]) {\r\n                        case 'zoompan':\r\n                            wax.mm.zoomer(MM_map).appendTo(MM_map.parent);\r\n                            break;\r\n                        case 'zoombox':\r\n                            wax.mm.zoombox(MM_map);\r\n                            break;\r\n                        case 'legend':\r\n                            MM_map.legend = wax.mm.legend(MM_map, t).appendTo(MM_map.parent);\r\n                            break;\r\n                        case 'bwdetect':\r\n                            wax.mm.bwdetect(MM_map);\r\n                            break;\r\n                        case 'share':\r\n                            wax.mm.share(MM_map, t).appendTo($('body')[0]);\r\n                            break;\r\n                        case 'tooltips':\r\n                            MM_map.interaction = wax.mm.interaction()\r\n                                .map(MM_map)\r\n                                .tilejson(t)\r\n                                .on(wax.tooltip()\r\n                                    .parent(MM_map.parent)\r\n                                    .events()\r\n                                );\r\n                            break;\r\n                        case 'movetips':\r\n                            MM_map.interaction = wax.mm.interaction()\r\n                                .map(MM_map)\r\n                                .tilejson(t)\r\n                                .on(wax.movetip()\r\n                                    .parent(MM_map.parent)\r\n                                    .events()\r\n                                );\r\n                            break;\r\n                    }\r\n                }\r\n                if (callback && typeof(callback) == 'function') callback();\r\n            });\r\n            return this.Map;\r\n        };        \r\n        \r\n\t\tloadMap: function(){\r\n            var self = this;\r\n"],[0,"    "]],"start1":947,"start2":947,"length1":356,"length2":2933}]],"length":6234,"saved":false}
{"ts":1350614685093,"patch":[[{"diffs":[[0," this;\r\n"],[-1,"           \r\n"],[0,"        "]],"start1":3868,"start2":3868,"length1":29,"length2":16},{"diffs":[[0,"        "],[-1,"/*"],[0,"mainMap "]],"start1":3894,"start2":3894,"length1":18,"length2":16},{"diffs":[[0," = Map('"],[1,"my"],[0,"map', {\r"]],"start1":3909,"start2":3909,"length1":16,"length2":18},{"diffs":[[0,"[0, "],[-1,"15"],[1,"20"],[0,"],  "]],"start1":4409,"start2":4409,"length1":10,"length2":10}]],"length":6221,"saved":false}
{"ts":1350614721205,"patch":[[{"diffs":[[0,"});\r"],[-1,"\n            mainMap.layers({\r\n                lineassubte: { \r\n                    api: 'http://tiles.appgis.com/lineassubte/{z}/{x}/{y}.png',\r\n                    center: {\r\n                        lat: -34.5767,      // Intial center point and zoom level.\r\n                        lon: -58.437,      // To find coordinates and zoom levels\r\n                        zoom: 10            // try: http://www.getlatlon.com or http://freegeoip.net/json/201.250.58.50\r\n                    }\r\n                }\r\n            });\r\n            _.forEach(sources, function(value) {\r\n                if(value) {\r\n\r\n                }\r\n            });*/\r"],[0,"\n\r\n\t"]],"start1":4747,"start2":4747,"length1":649,"length2":8}]],"length":5580,"saved":false}
{"ts":1350614745610,"patch":[[{"diffs":[[0,"pan'"],[-1,",\r\n                    'share'"],[0,"\r\n  "]],"start1":4680,"start2":4680,"length1":38,"length2":8}]],"length":5550,"saved":false}
{"ts":1350614760117,"patch":[[{"diffs":[[0,"7,      "],[1," "],[0,"// To fi"]],"start1":4197,"start2":4197,"length1":16,"length2":17},{"diffs":[[0,"[0, 20],"],[-1,"        "],[0,"     // "]],"start1":4410,"start2":4410,"length1":24,"length2":16},{"diffs":[[0,"tures: ["],[-1,"        "],[0,"        "]],"start1":4487,"start2":4487,"length1":24,"length2":16}]],"length":5535,"saved":false}
{"ts":1350614858122,"patch":[[{"diffs":[[0,"       }"],[-1,";"],[1,","],[0,"        "]],"start1":3793,"start2":3793,"length1":17,"length2":17}]],"length":5535,"saved":false}
{"ts":1350614901402,"patch":[[{"diffs":[[0,"inMap = "],[1,"self."],[0,"Map('mym"]],"start1":3904,"start2":3904,"length1":16,"length2":21}]],"length":5540,"saved":false}
{"ts":1350614931229,"patch":[[{"diffs":[[0," zoom: 1"],[-1,"0"],[1,"2"],[0,"        "]],"start1":4270,"start2":4270,"length1":17,"length2":17}]],"length":5540,"saved":false}
{"ts":1350615056540,"patch":[[{"diffs":[[0,"nction() {\r\n"],[1,"            var self = this;\r\n"],[0,"            "]],"start1":4758,"start2":4758,"length1":24,"length2":54}]],"length":5570,"saved":false}
{"ts":1350615135479,"patch":[[{"diffs":[[0,"ce(1);\r\n"],[-1,"                "],[0,"\r\n      "]],"start1":5052,"start2":5052,"length1":32,"length2":16},{"diffs":[[0,"    "],[-1,"e.preventDefault();\r\n                \r\n                if($this.hasClass('active')) {\r\n                    $('[data-control=\"layer\"]').removeClass('active');"],[1,"var url = _.template(baseURL, {dbname: dbname, table: table});\r\n                tilejson.tiles = [url + '.png'];\r\n                tilejson.grids = [url + '.grid.json'];\r\n                _.each(self.layers, function(layer){"],[0,"\r\n  "]],"start1":5074,"start2":5074,"length1":165,"length2":230},{"diffs":[[0,"move"],[-1,"Ov"],[1,"Lay"],[0,"er"],[1,"("],[0,"lay"],[-1,"(id);        "],[1,"er)"],[0,"\r\n  "]],"start1":5332,"start2":5332,"length1":28,"length2":20},{"diffs":[[0,"               }"],[-1," else {"],[1,");"],[0,"\r\n              "]],"start1":5351,"start2":5351,"length1":39,"length2":34},{"diffs":[[0,"    "],[-1,"    $('[data-control=\"layer\"]').removeClass('active');\r\n                    $this.addClass('active');\r\n                    mainMap.setOverlay(id);\r\n                }"],[1,"e.preventDefault();\r\n                \r\n"],[0,"\r\n  "]],"start1":5383,"start2":5383,"length1":173,"length2":47}]],"length":5480,"saved":false}
{"ts":1350615159919,"patch":[[{"diffs":[[0,"emplate("],[1,"self."],[0,"baseURL,"]],"start1":5091,"start2":5091,"length1":16,"length2":21},{"diffs":[[0,"           });\r\n"],[1,"                \r\n"],[0,"                "]],"start1":5360,"start2":5360,"length1":32,"length2":50}]],"length":5503,"saved":false}
{"ts":1350615240542,"patch":[[{"diffs":[[0,"= $(this),\r\n"],[1,"                    db = $this.attr('db')\r\n"],[0,"            "]],"start1":4919,"start2":4919,"length1":24,"length2":67},{"diffs":[[0,"('href')"],[-1,";"],[1,","],[0,"\r\n      "]],"start1":5009,"start2":5009,"length1":17,"length2":17},{"diffs":[[0," table: "],[-1,"table"],[1,"id"],[0,"});\r\n   "]],"start1":5172,"start2":5172,"length1":21,"length2":18}]],"length":5543,"saved":false}
{"ts":1350615256091,"patch":[[{"diffs":[[0,"name: db"],[-1,"name"],[0,", table:"]],"start1":5159,"start2":5159,"length1":20,"length2":16}]],"length":5539,"saved":false}
{"ts":1350615278220,"patch":[[{"diffs":[[0,"                "],[1,"self."],[0,"tilejson.tiles ="]],"start1":5183,"start2":5183,"length1":32,"length2":37},{"diffs":[[0,"                "],[1,"self."],[0,"tilejson.grids ="]],"start1":5238,"start2":5238,"length1":32,"length2":37}]],"length":5549,"saved":false}
{"ts":1350615371189,"patch":[[{"diffs":[[0,"              \r\n"],[1,"                var tableMap = new wax.mm.connector(self.tilejson));\r\n                mainMap.addLayer(tableMap);\r\n"],[0,"                "]],"start1":5424,"start2":5424,"length1":32,"length2":147}]],"length":5664,"saved":false}
{"ts":1350615390392,"patch":[[{"diffs":[[0,"ilejson)"],[-1,")"],[0,";\r\n     "]],"start1":5498,"start2":5498,"length1":17,"length2":16}]],"length":5663,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350754525380,"patch":[[{"diffs":[[0,"   });\r\n\r\n\t\t},\r\n"],[1,"        setOverlay: function(id) {\r\n    \r\n            if (!layers[id]) throw new Error('overlay with id ' + id + ' not found');\r\n            var l = layers[id];\r\n    \r\n            wax.tilejson(l.api, function(t) {\r\n                var level = (l.level === 'base') ? 0 : 1;\r\n                \r\n                try {\r\n                    MM_map.setLayerAt(level, new wax.mm.connector(t));\r\n                } catch (e) {\r\n                    MM_map.insertLayerAt(level, new wax.mm.connector(t));\r\n                }\r\n                if (MM_map.interaction) MM_map.interaction.map(MM_map).tilejson(t);\r\n                if (MM_map.legend) {\r\n                    MM_map.legend.content(t);\r\n                }\r\n            });\r\n    \r\n            if (l.center) {\r\n                var lat = l.center.lat || MM_map.getCenter().lat,\r\n                    lon = l.center.lon || MM_map.getCenter().lon,\r\n                    zoom = l.center.zoom || MM_map.getZoom();\r\n    \r\n                if (l.center.ease > 0) {\r\n                    MM_map.easey = easey().map(MM_map)\r\n                        .to(MM_map.locationCoordinate({ lat: lat, lon: lon })\r\n                        .zoomTo(zoom)).run(l.center.ease);\r\n                } else {\r\n                    MM_map.setCenterZoom({ lat: lat, lon: lon }, zoom);\r\n                }\r\n            }\r\n        };        \r\n"],[0,"        \r\n      "]],"start1":4704,"start2":4704,"length1":32,"length2":1378}]],"length":7009,"saved":false}
{"ts":1350754547266,"patch":[[{"diffs":[[0,"  \r\n"],[-1,"            if (!layers[id]) throw new Error('overlay with id ' + id + ' not found');\r\n            var l = layers[id];\r\n    \r\n"],[0,"    "]],"start1":4758,"start2":4758,"length1":134,"length2":8}]],"length":6883,"saved":false}
{"ts":1350754562675,"patch":[[{"diffs":[[0,"(id) {\r\n    "],[1,"        var self = this;\r\n            "],[0,"\r\n          "]],"start1":4748,"start2":4748,"length1":24,"length2":62}]],"length":6921,"saved":false}
{"ts":1350755085289,"patch":[[{"diffs":[[0,"},\r\n"],[-1,"        setOverlay: function(id) {\r\n            var self = this;\r\n            \r\n            wax.tilejson(l.api, function(t) {\r\n                var level = (l.level === 'base') ? 0 : 1;\r\n                \r\n                try {\r\n                    MM_map.setLayerAt(level, new wax.mm.connector(t));\r\n                } catch (e) {\r\n                    MM_map.insertLayerAt(level, new wax.mm.connector(t));\r\n                }\r\n                if (MM_map.interaction) MM_map.interaction.map(MM_map).tilejson(t);\r\n                if (MM_map.legend) {\r\n                    MM_map.legend.content(t);\r\n                }\r\n            });\r\n    \r\n            if (l.center) {\r\n                var lat = l.center.lat || MM_map.getCenter().lat,\r\n                    lon = l.center.lon || MM_map.getCenter().lon,\r\n                    zoom = l.center.zoom || MM_map.getZoom();\r\n    \r\n                if (l.center.ease > 0) {\r\n                    MM_map.easey = easey().map(MM_map)\r\n                        .to(MM_map.locationCoordinate({ lat: lat, lon: lon })\r\n                        .zoomTo(zoom)).run(l.center.ease);\r\n                } else {\r\n                    MM_map.setCenterZoom({ lat: lat, lon: lon }, zoom);\r\n                }\r\n            }\r\n        };        \r\n"],[0,"    "]],"start1":4716,"start2":4716,"length1":1266,"length2":8},{"diffs":[[0,"    "],[-1,"_.each(self.layers, function(layer){\r\n                    mainMap.removeLayer(layer)"],[1,"\r\n                try {\r\n                    MM_map.setLayerAt(level, new wax.mm.connector(self.tilejson));\r\n                } catch (e) {\r\n                    MM_map.insertLayerAt(level, new wax.mm.connector(self.tilejson));"],[0,"\r\n  "]],"start1":5311,"start2":5311,"length1":92,"length2":233},{"diffs":[[0,"               }"],[-1,");"],[0,"\r\n              "]],"start1":5543,"start2":5543,"length1":34,"length2":32},{"diffs":[[0,"    "],[-1,"\r\n                var tableMap = new wax.mm.connector(self.tilejson);\r\n                mainMap.addLayer(tableMap);\r\n                e.preventDefault"],[1,"if (MM_map.interaction) MM_map.interaction.map(MM_map).tilejson(self.tilejson);\r\n                if (MM_map.legend) {\r\n                    MM_map.legend.content(self.tilejson);\r\n                }\r\n\r\n                var lat = l.center.lat || MM_map.getCenter().lat,\r\n                    lon = l.center.lon || MM_map.getCenter().lon,\r\n                    zoom = l.center.zoom || MM_map.getZoom"],[0,"();\r"]],"start1":5573,"start2":5573,"length1":156,"length2":399}]],"length":6045,"saved":false}
{"ts":1350755169021,"patch":[[{"diffs":[[0,"ction(e) {\r\n"],[1,"                var level = (l.level === 'base') ? 0 : 1;\r\n                \r\n"],[0,"            "]],"start1":4881,"start2":4881,"length1":24,"length2":101}]],"length":6122,"saved":false}
{"ts":1350755265279,"patch":[[{"diffs":[[0," {\r\n"],[-1,"                var level = (l.level === 'base') ? 0 : 1;\r\n"],[0,"    "]],"start1":4889,"start2":4889,"length1":67,"length2":8},{"diffs":[[0,"                "],[1,"var level = (l.level === 'base') ? 0 : 1;"],[0,"\r\n              "]],"start1":5317,"start2":5317,"length1":32,"length2":73}]],"length":6104,"saved":false}
{"ts":1350755431309,"patch":[[{"diffs":[[0,"   }"],[-1,"\r\n\r\n                var lat = l.center.lat || MM_map.getCenter().lat,\r\n                    lon = l.center.lon || MM_map.getCenter().lon,\r\n                    zoom = l.center.zoom || MM_map.getZoom();\r\n    "],[0,"    "]],"start1":5827,"start2":5827,"length1":213,"length2":8}]],"length":5899,"saved":false}
{"ts":1350755525296,"patch":[[{"diffs":[[0,"el ="],[-1," (l.level === 'base') ? 0 :"],[0," 1;\r"]],"start1":5340,"start2":5340,"length1":35,"length2":8}]],"length":5872,"saved":false}
{"ts":1350755799397,"patch":[[{"diffs":[[0,"s.attr('"],[-1,"db"],[1,"DBName"],[0,"')\r\n    "]],"start1":4978,"start2":4978,"length1":18,"length2":22}]],"length":5876,"saved":false}
{"ts":1350756145292,"patch":[[{"diffs":[[0,"      },"],[1,"\r\n"],[0,"        "],[1,"layers: function(x) {\r\n            if (!arguments.length) return this.layers;\r\n            layers = x;\r\n            return this.Map;\r\n    };"],[0,"\r\n      "]],"start1":3794,"start2":3794,"length1":24,"length2":166}]],"length":6018,"saved":false}
{"ts":1350756157410,"patch":[[{"diffs":[[0,"yers"],[-1," = []"],[0,";\r\n "]],"start1":507,"start2":507,"length1":13,"length2":8}]],"length":6013,"saved":false}
{"ts":1350756170171,"patch":[[{"diffs":[[0,"\";\r\n"],[-1,"            this.layers;\r\n"],[0,"    "]],"start1":484,"start2":484,"length1":34,"length2":8}]],"length":5987,"saved":false}
{"ts":1350756187435,"patch":[[{"diffs":[[0,"            "],[1,"this."],[0,"layers = x;\r"]],"start1":3860,"start2":3860,"length1":24,"length2":29}]],"length":5992,"saved":false}
{"ts":1350756239794,"patch":[[{"diffs":[[0,"duleId });\r\n"],[1,"            this.Map = {};\r\n            this.layers;\r\n            \r\n"],[0,"            "]],"start1":265,"start2":265,"length1":24,"length2":92}]],"length":6060,"saved":false}
{"ts":1350756256168,"patch":[[{"diffs":[[0,"s.Map;\r\n    "],[-1,"};"],[1,"    },"],[0,"\r\n        \r\n"]],"start1":3980,"start2":3980,"length1":26,"length2":30}]],"length":6064,"saved":false}
{"ts":1350756349186,"patch":[[{"diffs":[[0,"      },"],[-1,"\r\n    "],[0,"    \r\n"],[1,""],[0,"\t\tloadMa"]],"start1":3990,"start2":3990,"length1":28,"length2":22},{"diffs":[[0,"   });\r\n\r\n\t\t},\r\n"],[1,"        setOverlay = function(id) {\r\n    \r\n            if (!layers[id]) throw new Error('overlay with id ' + id + ' not found');\r\n            var l = layers[id];\r\n    \r\n            wax.tilejson(l.api, function(t) {\r\n                var level = (l.level === 'base') ? 0 : 1;\r\n                \r\n                try {\r\n                    MM_map.setLayerAt(level, new wax.mm.connector(t));\r\n                } catch (e) {\r\n                    MM_map.insertLayerAt(level, new wax.mm.connector(t));\r\n                }\r\n                if (MM_map.interaction) MM_map.interaction.map(MM_map).tilejson(t);\r\n                if (MM_map.legend) {\r\n                    MM_map.legend.content(t);\r\n                }\r\n            });\r\n    \r\n            if (l.center) {\r\n                var lat = l.center.lat || MM_map.getCenter().lat,\r\n                    lon = l.center.lon || MM_map.getCenter().lon,\r\n                    zoom = l.center.zoom || MM_map.getZoom();\r\n    \r\n                if (l.center.ease > 0) {\r\n                    MM_map.easey = easey().map(MM_map)\r\n                        .to(MM_map.locationCoordinate({ lat: lat, lon: lon })\r\n                        .zoomTo(zoom)).run(l.center.ease);\r\n                } else {\r\n                    MM_map.setCenterZoom({ lat: lat, lon: lon }, zoom);\r\n                }\r\n            }\r\n        },"],[0,"        \r\n      "]],"start1":4886,"start2":4886,"length1":32,"length2":1369}]],"length":7395,"saved":false}
{"ts":1350756371535,"patch":[[{"diffs":[[0,"(id) {\r\n    "],[1,"        "],[0,"\r\n          "]],"start1":4931,"start2":4931,"length1":24,"length2":32}]],"length":7403,"saved":false}
{"ts":1350756467801,"patch":[[{"diffs":[[0,"tion(id) {\r\n"],[1,"                \r\n                var $this = $(id),\r\n                    db = $this.attr('DBName')\r\n                    id = $this.attr('href'),\r\n                \r\n                id = id.replace(/.*(?=#[^\\s]+$)/, '').slice(1);\r\n\r\n                var url = _.template(self.baseURL, {dbname: db, table: id});\r\n                self.tilejson.tiles = [url + '.png'];\r\n                self.tilejson.grids = [url + '.grid.json'];\r\n                var level = 1;\r\n                try {\r\n                    MM_map.setLayerAt(level, new wax.mm.connector(self.tilejson));\r\n                } catch (e) {\r\n                    MM_map.insertLayerAt(level, new wax.mm.connector(self.tilejson));\r\n                }\r\n                if (MM_map.interaction) MM_map.interaction.map(MM_map).tilejson(self.tilejson);\r\n                if (MM_map.legend) {\r\n                    MM_map.legend.content(self.tilejson);\r\n                }             \r\n"],[0,"            "]],"start1":4927,"start2":4927,"length1":24,"length2":952}]],"length":8331,"saved":false}
{"ts":1350756599113,"patch":[[{"diffs":[[0," {\r\n            "],[-1,"    "],[1,"var self = this;"],[0,"\r\n              "]],"start1":4935,"start2":4935,"length1":36,"length2":48},{"diffs":[[0,"s;\r\n            "],[1,"\r\n   "],[1,"     "],[0,"    var $this = "]],"start1":4965,"start2":4965,"length1":32,"length2":42},{"diffs":[[0,"s = $(id),\r\n"],[-1,"    "],[0,"            "]],"start1":5003,"start2":5003,"length1":28,"length2":24},{"diffs":[[0,"                "],[-1,"    "],[0,"id = $this.attr("]],"start1":5058,"start2":5058,"length1":36,"length2":32},{"diffs":[[0,"),\r\n            "],[-1,"    "],[0,"\r\n              "]],"start1":5096,"start2":5096,"length1":36,"length2":32},{"diffs":[[0,"  \r\n            "],[-1," "],[-1,"   "],[0,"id = id.replace("]],"start1":5110,"start2":5110,"length1":36,"length2":32},{"diffs":[[0,"').slice(1);\r\n\r\n"],[-1,"    "],[0,"            var "]],"start1":5161,"start2":5161,"length1":36,"length2":32},{"diffs":[[0,");\r\n            "],[-1,"   "],[-1," "],[0,"self.tilejson.ti"]],"start1":5247,"start2":5247,"length1":36,"length2":32},{"diffs":[[0,"url + '.png'];\r\n"],[-1,"    "],[0,"            self"]],"start1":5286,"start2":5286,"length1":36,"length2":32},{"diffs":[[0,"];\r\n"],[-1,"                var level = 1;\r\n                try {\r\n                    MM_map.setLayerAt(level, new wax.mm.connector(self.tilejson));\r\n                } catch (e) {\r\n                    MM_map.insertLayerAt(level, new wax.mm.connector(self.tilejson));\r\n                }\r\n                if (MM_map.interaction) MM_map.interaction.map(MM_map).tilejson(self.tilejson);\r\n                if (MM_map.legend) {\r\n                    MM_map.legend.content(self.tilejson);\r\n                }             \r\n            "],[0,"\r\n  "]],"start1":5355,"start2":5355,"length1":522,"length2":8},{"diffs":[[0,"   if (!"],[1,"self."],[0,"layers[i"]],"start1":5370,"start2":5370,"length1":16,"length2":21},{"diffs":[[0,"var l = "],[1,"self."],[0,"layers[i"]],"start1":5465,"start2":5465,"length1":16,"length2":21},{"diffs":[[0,"0 : 1;\r\n"],[-1,"                \r\n"],[0,"        "]],"start1":5595,"start2":5595,"length1":34,"length2":16}]],"length":7803,"saved":false}
{"ts":1350756817226,"patch":[[{"diffs":[[0,"son'];\r\n"],[1,"            _.forEach(self.layers, function(layer){\r\n                    self.Map.removeLayer(layer)\r\n            });\r\n            "],[0,"\r\n      "]],"start1":5351,"start2":5351,"length1":16,"length2":147}]],"length":7934,"saved":false}
{"ts":1350757006878,"patch":[[{"diffs":[[0,"    "],[-1,"if (!self.layers[id]) throw new Error('overlay with id ' + id + ' not found');\r\n            var l = self.layers[id];\r\n    \r\n            wax.tilejson(l.api, function(t) {\r\n                var level = (l.level === 'base') ? 0 : 1;\r\n    "],[1,"var testMap = new wax.mm.connector(tilejson);\r\n            self.Map.addLayer(testMap);\r\n            \r\n"],[0,"    "]],"start1":5500,"start2":5500,"length1":242,"length2":110},{"diffs":[[0,"         try {\r\n"],[-1,"    "],[0,"                "]],"start1":5609,"start2":5609,"length1":36,"length2":32},{"diffs":[[0,");\r\n            "],[-1,"   "],[-1," "],[0,"} catch (e) {\r\n "]],"start1":5689,"start2":5689,"length1":36,"length2":32},{"diffs":[[0," } catch (e) {\r\n"],[-1,"    "],[0,"                "]],"start1":5704,"start2":5704,"length1":36,"length2":32},{"diffs":[[0,"            "],[-1,"  "],[-1,"  "],[0,"}\r\n"],[-1,"    "],[0,"            "]],"start1":5791,"start2":5791,"length1":35,"length2":27},{"diffs":[[0,");\r\n            "],[-1," "],[-1,"   "],[0,"if (MM_map.legen"]],"start1":5883,"start2":5883,"length1":36,"length2":32},{"diffs":[[0,"_map.legend) {\r\n"],[-1,"    "],[0,"                "]],"start1":5905,"start2":5905,"length1":36,"length2":32},{"diffs":[[0,");\r\n"],[-1,"                }\r\n            });\r\n    \r\n            if (l.center) {\r\n                var lat = l.center.lat || MM_map.getCenter().lat,\r\n                    lon = l.center.lon || MM_map.getCenter().lon,\r\n                    zoom = l.center.zoom || MM_map.getZoom();\r\n    \r\n                if (l.center.ease > 0) {\r\n                    MM_map.easey = easey().map(MM_map)\r\n                        .to(MM_map.locationCoordinate({ lat: lat, lon: lon })\r\n                        .zoomTo(zoom)).run(l.center.ease);\r\n                } else {\r\n                    MM_map.setCenterZoom({ lat: lat, lon: lon }, zoom);\r\n                }\r\n"],[0,"    "]],"start1":5960,"start2":5960,"length1":637,"length2":8}]],"length":7145,"saved":false}
{"ts":1350757023117,"patch":[[{"diffs":[[0,");\r\n"],[-1,"            if (MM_map.legend) {\r\n                MM_map.legend.content(t);\r\n            }"],[0,"\r\n  "]],"start1":5883,"start2":5883,"length1":98,"length2":8}]],"length":7055,"saved":false}
{"ts":1350757084638,"patch":[[{"diffs":[[0,"    "],[-1,"\r\n                var $this = $(this),\r\n                    db = $this.attr('DBName')\r\n                    id = $this.attr('href'),\r\n                \r\n                id = id.replace(/.*(?=#[^\\s]+$)/, '').slice(1);\r\n\r\n                var url = _.template(self.baseURL, {dbname: db, table: id});\r\n                self.tilejson.tiles = [url + '.png'];\r\n                self.tilejson.grids = [url + '.grid.json'];\r\n                var level = 1;\r\n                try {\r\n                    MM_map.setLayerAt(level, new wax.mm.connector(self.tilejson));\r\n                } catch (e) {\r\n                    MM_map.insertLayerAt(level, new wax.mm.connector(self.tilejson));\r\n                }\r\n                if (MM_map.interaction) MM_map.interaction.map(MM_map).tilejson(self.tilejson);\r\n                if (MM_map.legend) {\r\n                    MM_map.legend.content(self.tilejson);\r\n                }            "],[1,"self.setOverlay($(this));"],[0,"\r\n\r\n"]],"start1":6084,"start2":6084,"length1":919,"length2":33}]],"length":6169,"saved":false}
{"ts":1350757123603,"patch":[[{"diffs":[[0,"unction("],[-1,"id"],[1,"el"],[0,") {\r\n   "]],"start1":4924,"start2":4924,"length1":18,"length2":18},{"diffs":[[0,"s = "],[-1,"$(id)"],[1,"el"],[0,",\r\n "]],"start1":5003,"start2":5003,"length1":13,"length2":10}]],"length":6166,"saved":false}
{"ts":1350757173229,"patch":[[{"diffs":[[0,"tOverlay"],[-1," ="],[1,":"],[0," functio"]],"start1":4912,"start2":4912,"length1":18,"length2":17}]],"length":6165,"saved":false}
{"ts":1350757248334,"patch":[[{"diffs":[[0,"   this."],[1,"the"],[0,"Map = {}"]],"start1":286,"start2":286,"length1":16,"length2":19},{"diffs":[[0,"       this."],[-1,"l"],[1,"theL"],[0,"ayers;\r\n    "]],"start1":313,"start2":313,"length1":25,"length2":28}]],"length":6171,"saved":false}
{"ts":1350757351750,"patch":[[{"diffs":[[0,"    return this."],[1,"the"],[0,"Map;\r\n        },"]],"start1":3813,"start2":3813,"length1":32,"length2":35}]],"length":6174,"saved":false}
{"ts":1350757402261,"patch":[[{"diffs":[[0,"       this."],[-1,"l"],[1,"theL"],[0,"ayers = x;\r\n"]],"start1":3942,"start2":3942,"length1":25,"length2":28},{"diffs":[[0,"rn this."],[1,"the"],[0,"Map;\r\n  "]],"start1":3986,"start2":3986,"length1":16,"length2":19}]],"length":6180,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350758020916,"patch":[[{"diffs":[[0,"\r\n        },"],[1,"\r\n    "],[0,"    \r\n\t\tload"]],"start1":4001,"start2":4001,"length1":24,"length2":30}]],"length":6186,"saved":false}
{"ts":1350758033287,"patch":[[{"diffs":[[0,"p;\r\n        },\r\n"],[1,"        \r\n"],[0,"        layers: "]],"start1":3834,"start2":3834,"length1":32,"length2":42}]],"length":6196,"saved":false}
{"ts":1350758139003,"patch":[[{"diffs":[[0,"ch(self."],[-1,"l"],[1,"theL"],[0,"ayers, f"]],"start1":5405,"start2":5405,"length1":17,"length2":20},{"diffs":[[0,"       self."],[1,"the"],[0,"Map.removeLa"]],"start1":5455,"start2":5455,"length1":24,"length2":27}]],"length":6202,"saved":false}
{"ts":1350758198726,"patch":[[{"diffs":[[0,"nnector("],[1,"self."],[0,"tilejson"]],"start1":5564,"start2":5564,"length1":16,"length2":21}]],"length":6207,"saved":false}
{"ts":1350793103584,"patch":[[{"diffs":[[0,"        "],[-1,"\r\n            "],[1," wax.tilejson('http://api.tiles.mapbox.com/v2/mapbox.geography-class.jsonp',\r\n                function(tilejson) {\r\n                    self.theMap = new L.Map('mymap')\r\n                    .addLayer(new wax.leaf.connector(tilejson))\r\n                    .setView(new L.LatLng(51, 0), 1);\r\n            });           \r\n            /*"],[0,"mainMap "]],"start1":4093,"start2":4093,"length1":30,"length2":348},{"diffs":[[0,"     });"],[1,"*/"],[0,"\r\n\r\n\t\t},"]],"start1":5233,"start2":5233,"length1":16,"length2":18}]],"length":6527,"saved":false}
{"ts":1350793136388,"patch":[[{"diffs":[[0,"Lng("],[-1,"51, 0"],[1,"-34.5767, -58.437"],[0,"), 1"],[1,"2"],[0,");\r\n"]],"start1":4374,"start2":4374,"length1":17,"length2":30}]],"length":6540,"saved":false}
{"ts":1350793153381,"patch":[[{"diffs":[[0,"om/v"],[-1,"2"],[1,"3"],[0,"/mapbox."],[-1,"geography-clas"],[1,"mapbox-street"],[0,"s.js"]],"start1":4141,"start2":4141,"length1":31,"length2":30}]],"length":6539,"saved":false}
{"ts":1350793302839,"patch":[[{"diffs":[[0,"  \r\n"],[-1,"        layers: function(x) {\r\n            if (!arguments.length) return this.layers;\r\n            this.theLayers = x;\r\n            return this.theMap;\r\n        },\r\n        \r\n"],[0,"\t\tlo"]],"start1":3856,"start2":3856,"length1":183,"length2":8}]],"length":6364,"saved":false}
{"ts":1350793351156,"patch":[[{"diffs":[[0,"is.baseU"],[1,"rl = 'http://api.tiles.mapbox.com/v3/mapbox.mapbox-streets.jsonp';\r\n            this.layerU"],[0,"RL = \"ht"]],"start1":365,"start2":365,"length1":16,"length2":107}]],"length":6455,"saved":false}
{"ts":1350793361411,"patch":[[{"diffs":[[0,"son("],[-1,"'http://api.tiles.mapbox.com/v3/mapbox.mapbox-streets.jsonp'"],[1,"self.baseURL"],[0,",\r\n "]],"start1":4027,"start2":4027,"length1":68,"length2":20}]],"length":6407,"saved":false}
{"ts":1350793365743,"patch":[[{"diffs":[[0,"baseURL,"],[-1,"\r\n               "],[0," functio"]],"start1":4036,"start2":4036,"length1":33,"length2":16}]],"length":6390,"saved":false}
{"ts":1350793423831,"patch":[[{"diffs":[[0,"r self = this;\r\n"],[1,"            self.theMap = new L.Map('mymap');\r\n            \r\n"],[0,"             wax"]],"start1":3989,"start2":3989,"length1":32,"length2":93}]],"length":6451,"saved":false}
{"ts":1350793621451,"patch":[[{"diffs":[[0,");\r\n            "],[1,"self.tilejson.grids = self.baseUrl;\r\n            mainMap = new wax.leaf.connector(tilejson);\r\n            self.theMap.addLayer(mainMap);\r\n            "],[0,"\r\n"],[-1," "],[0,"            wax."]],"start1":4048,"start2":4048,"length1":35,"length2":184}]],"length":6600,"saved":false}
{"ts":1350793649318,"patch":[[{"diffs":[[0,"    "],[-1,"\r\n            wax.tilejson(self.baseURL, function(tilejson) {\r\n                    self.theMap = new L.Map('mymap')\r\n                    .addLayer(new wax.leaf.connector(tilejson))\r\n                    "],[1,"self.theMap"],[0,".set"]],"start1":4210,"start2":4210,"length1":210,"length2":19},{"diffs":[[0,"        "],[-1,"});"],[0,"        "]],"start1":4277,"start2":4277,"length1":19,"length2":16}]],"length":6406,"saved":false}
{"ts":1350793689819,"patch":[[{"diffs":[[0,"nnector("],[1,"self."],[0,"tilejson"]],"start1":4138,"start2":4138,"length1":16,"length2":21}]],"length":6411,"saved":false}
{"ts":1350793805508,"patch":[[{"diffs":[[0,"grids = "],[1,"["],[0,"self.bas"]],"start1":4078,"start2":4078,"length1":16,"length2":17},{"diffs":[[0,".baseUrl"],[1,"]"],[0,";\r\n     "]],"start1":4091,"start2":4091,"length1":16,"length2":17}]],"length":6413,"saved":false}
{"ts":1350793890120,"patch":[[{"diffs":[[0,");\r\n            "],[1,"//"],[0,"self.theMap.setV"]],"start1":4205,"start2":4205,"length1":32,"length2":34}]],"length":6415,"saved":false}
{"ts":1350794295029,"patch":[[{"diffs":[[0,"n(){"],[-1,"\r\n            var self = this;\r\n            self.theMap = new L.Map('mymap');\r\n            self.tilejson.grids = [self.baseUrl];\r\n            mainMap = new wax.leaf.connector(self.tilejson);\r\n            self.theMap.addLayer(mainMap);\r\n            //self.theMap.setView(new L.LatLng(-34.5767, -58.437), 12);\r\n"],[0,"    "]],"start1":3969,"start2":3969,"length1":317,"length2":8}]],"length":6106,"saved":false}
{"ts":1350795019528,"patch":[[{"diffs":[[0,"        "],[-1,"/*"],[0,"mainMap "]],"start1":4002,"start2":4002,"length1":18,"length2":16},{"diffs":[[0,"     });"],[-1,"*/"],[0,"\r\n\r\n\t\t},"]],"start1":4810,"start2":4810,"length1":18,"length2":16}]],"length":6102,"saved":false}
{"ts":1350795254026,"patch":[[{"diffs":[[0,"            "],[-1,""],[0,""],[1,"var self = this;\r\n            "],[0,"wax.tilejson"]],"start1":1026,"start2":1026,"length1":24,"length2":54},{"diffs":[[0,"            "],[1,"self."],[0,"MM_map = new"]],"start1":1450,"start2":1450,"length1":24,"length2":29},{"diffs":[[0,"                "],[1,"self."],[0,"MM_map.setCenter"]],"start1":1534,"start2":1534,"length1":32,"length2":37},{"diffs":[[0,"                "],[1,"self."],[0,"MM_map.setZoomRa"]],"start1":1821,"start2":1821,"length1":32,"length2":37},{"diffs":[[0,"                "],[1,"self."],[0,"MM_map.setZoomRa"]],"start1":1926,"start2":1926,"length1":32,"length2":37},{"diffs":[[0,"ibution("],[1,"self."],[0,"MM_map, "]],"start1":2043,"start2":2043,"length1":16,"length2":21},{"diffs":[[0,"ap, t).appendTo("],[1,"self."],[0,"MM_map.parent);\r"]],"start1":2060,"start2":2060,"length1":32,"length2":37},{"diffs":[[0,".zoomer("],[1,"self."],[0,"MM_map)."]],"start1":2287,"start2":2287,"length1":16,"length2":21},{"diffs":[[0,"M_map).appendTo("],[1,"self."],[0,"MM_map.parent);\r"]],"start1":2301,"start2":2301,"length1":32,"length2":37},{"diffs":[[0,"zoombox("],[-1,""],[0,""],[1,"self."],[0,"MM_map);"]],"start1":2451,"start2":2451,"length1":16,"length2":21},{"diffs":[[0,"            "],[1,"self."],[0,"MM_map.legen"]],"start1":2566,"start2":2566,"length1":24,"length2":29},{"diffs":[[0,".legend("],[1,"self."],[0,"MM_map, "]],"start1":2605,"start2":2605,"length1":16,"length2":21},{"diffs":[[0,"ppendTo("],[1,"self."],[0,"MM_map.p"]],"start1":2630,"start2":2630,"length1":16,"length2":21},{"diffs":[[0,"wdetect("],[-1,""],[0,""],[1,"self."],[0,"MM_map);"]],"start1":2774,"start2":2774,"length1":16,"length2":21},{"diffs":[[0,"m.share("],[1,"self."],[0,"MM_map, "]],"start1":2905,"start2":2905,"length1":16,"length2":21},{"diffs":[[0,"                "],[1,"self."],[0,"MM_map.interacti"]],"start1":3044,"start2":3044,"length1":32,"length2":37},{"diffs":[[0,"           .map("],[1,"self."],[0,"MM_map)\r\n       "]],"start1":3129,"start2":3129,"length1":32,"length2":37},{"diffs":[[0,"        .parent("],[-1,""],[0,""],[1,"self."],[0,"MM_map.parent)\r\n"]],"start1":3284,"start2":3284,"length1":32,"length2":37},{"diffs":[[0,"                "],[-1,""],[0,""],[1,"self."],[0,"MM_map.interacti"]],"start1":3494,"start2":3494,"length1":32,"length2":37},{"diffs":[[0,".parent("],[-1,""],[0,""],[1,"self."],[0,"MM_map.p"]],"start1":3737,"start2":3737,"length1":16,"length2":21},{"diffs":[[0," return "],[-1,"this.theM"],[1,"self.MM_m"],[0,"ap;\r\n   "]],"start1":4032,"start2":4032,"length1":25,"length2":25}]],"length":6227,"saved":false}
{"ts":1350795379058,"patch":[[{"diffs":[[0,"ction(){"],[-1,"           "],[1,"\r\n"],[0,"        "]],"start1":4090,"start2":4090,"length1":27,"length2":18},{"diffs":[[0,"inMap = "],[-1,"self"],[1,"this"],[0,".Map('my"]],"start1":4128,"start2":4128,"length1":20,"length2":20}]],"length":6218,"saved":false}
{"ts":1350795427070,"patch":[[{"diffs":[[0,"       .map("],[1,"self."],[0,"MM_map)\r\n   "]],"start1":3583,"start2":3583,"length1":24,"length2":29}]],"length":6223,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350795771884,"patch":[[{"diffs":[[0,"   this."],[-1,"theM"],[1,"MM_m"],[0,"ap = {};"]],"start1":286,"start2":286,"length1":20,"length2":20}]],"length":6223,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350796445440,"patch":[[{"diffs":[[0,"    "],[-1,"self.tilejson.tiles = [url + '.png'];\r\n            self.tilejson.grids = [url + '.grid.json'];\r\n            _.forEach(self.theLayers, function(layer){\r\n                    self.theMap.removeLayer(layer)\r\n            });\r\n            \r\n            var testMap = new wax.mm.connector(self.tilejson);\r\n            self.Map.addLayer(testMap);\r\n            \r\n            try {\r\n                MM_map.setLayerAt(level, new wax.mm.connector(t));\r\n            } catch (e) {\r\n                MM_map.insertLayerAt(level, new wax.mm.connector(t));\r\n            }\r\n            if (MM_map.interaction) MM_map.interaction.map(MM_map).tilejson(t"],[1,"layer = new MM.TemplatedLayer(url);             \r\n            var testMap = new wax.mm.connector(layer);\r\n            self.MM_map.addLayer(layer"],[0,");\r\n"]],"start1":5302,"start2":5302,"length1":639,"length2":152}]],"length":5736,"saved":false}
{"ts":1350796574702,"patch":[[{"diffs":[[0,"ble: id});\r\n"],[1,"            self.tilejson.tiles = [url + '.png'];\r\n            self.tilejson.grids = [url + '.grid.json'];\r\n\r\n"],[0,"            "]],"start1":5282,"start2":5282,"length1":24,"length2":134}]],"length":5846,"saved":false}
{"ts":1350796594904,"patch":[[{"diffs":[[0,"];\r\n"],[-1,"\r\n            layer = new MM.TemplatedLayer(url); "],[0,"    "]],"start1":5398,"start2":5398,"length1":58,"length2":8},{"diffs":[[0,"nnector("],[-1,"layer"],[1,"self.tilejson"],[0,");\r\n    "]],"start1":5455,"start2":5455,"length1":21,"length2":29}]],"length":5804,"saved":false}
{"ts":1350796601447,"patch":[[{"diffs":[[0,"ddLayer("],[-1,"layer"],[1,"testMap"],[0,");\r\n\r\n  "]],"start1":5505,"start2":5505,"length1":21,"length2":23}]],"length":5806,"saved":false}
{"ts":1350796780564,"patch":[[{"diffs":[[0,"te(self."],[-1,"base"],[1,"layer"],[0,"URL, {db"]],"start1":5250,"start2":5250,"length1":20,"length2":21}]],"length":5807,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350797223198,"patch":[[{"diffs":[[0,"    "],[-1,"self.MM_map.addLayer(testMap);"],[1,"try {\r\n                MM_map.setLayerAt(0, new wax.mm.connector(self.tilejson));\r\n            } catch (e) {\r\n                MM_map.insertLayerAt(0, new wax.mm.connector(self.tilejson));\r\n            }"],[0,"\r\n\r\n"]],"start1":5489,"start2":5489,"length1":38,"length2":210}]],"length":5979,"saved":false}
{"ts":1350797282532,"patch":[[{"diffs":[[0,"            "],[1,"self."],[0,"MM_map.setLa"]],"start1":5504,"start2":5504,"length1":24,"length2":29},{"diffs":[[0,"        "],[1,"self."],[0,"MM_map.i"]],"start1":5616,"start2":5616,"length1":16,"length2":21}]],"length":5989,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350853750902,"patch":[[{"diffs":[[0,"= table "],[1,"%>/geom_type/<%= geom_type "],[0,"%>/{z}/{"]],"start1":525,"start2":525,"length1":16,"length2":43}]],"length":6016,"saved":false}
{"ts":1350853823551,"patch":[[{"diffs":[[0,"able: id"],[1,", geom_type: 'multilinestring'"],[0,"});\r\n   "]],"start1":5309,"start2":5309,"length1":16,"length2":46}]],"length":6046,"saved":false}
{"ts":1350854178531,"patch":[[{"diffs":[[0,"ble "],[-1,"%>/geom_type/<%= geom_type "],[0,"%>/{"]],"start1":529,"start2":529,"length1":35,"length2":8},{"diffs":[[0,": id"],[-1,", geom_type: 'multilinestring'"],[0,"});\r"]],"start1":5286,"start2":5286,"length1":38,"length2":8}]],"length":5989,"saved":false}
{"ts":1350854208381,"patch":[[{"diffs":[[0,"      },"],[1,"\r\n        setStyle:function(el) {\r\n        \r\n        },\r\n"],[0,"        "]],"start1":5711,"start2":5711,"length1":16,"length2":73}]],"length":6046,"saved":false}
{"ts":1350854221639,"patch":[[{"diffs":[[0,"tStyle:function("],[-1,"el) {"],[1,"style) {\r\n            "],[0,"\r\n        \r\n    "]],"start1":5731,"start2":5731,"length1":37,"length2":54}]],"length":6063,"saved":false}
{"ts":1350854409048,"patch":[[{"diffs":[[0,"ion("],[-1,"styl"],[0,"e"],[1,"l"],[0,") {\r"]],"start1":5743,"start2":5743,"length1":13,"length2":10}]],"length":6060,"saved":false}
{"ts":1350854447613,"patch":[[{"diffs":[[0,"function(el) {\r\n"],[1,"            var self = this;\r\n            \r\n            var $this = el,\r\n                db = $this.attr('DBName')\r\n                id = $this.attr('href'),\r\n            \r\n            id = id.replace(/.*(?=#[^\\s]+$)/, '').slice(1);\r\n\r\n            var url = _.template(self.baseStyleURL, {dbname: db, table: id});\r\n"],[0,"            \r\n  "]],"start1":5738,"start2":5738,"length1":32,"length2":346}]],"length":6374,"saved":false}
{"ts":1350854473166,"patch":[[{"diffs":[[0,");\r\n            "],[1,"var style= {};"],[0,"\r\n        \r\n    "]],"start1":6064,"start2":6064,"length1":32,"length2":46}]],"length":6388,"saved":false}
{"ts":1350854716078,"patch":[[{"diffs":[[0," style= "],[-1,"{}"],[1,"\"#\" id + \"{line-color:#FF6600; line-width:1; line-opacity: 0.7;}\""],[0,";\r\n     "]],"start1":6083,"start2":6083,"length1":18,"length2":81}]],"length":6451,"saved":false}
{"ts":1350854825518,"patch":[[{"diffs":[[0,"y: 0.7;}\";\r\n"],[1,"            \r\n            $.ajax({ url: url, async: true }).then(function(data) {\r\n                switch(ref) {\r\n                    case self.enumDBType.table: self.ListSources.data = data.objectList; break;\r\n                    case self.enumDBType.sproc: self.ListFunctions.data = data.objectList; break;\r\n                    case self.enumDBType.shares: self.ListShares.data = data.objectList; break;\r\n                }\r\n            });         \r\n"],[0,"        \r\n  "]],"start1":6147,"start2":6147,"length1":24,"length2":476}]],"length":6903,"saved":false}
{"ts":1350854846650,"patch":[[{"diffs":[[0,"nc: true"],[1,", method:post"],[0," }).then"]],"start1":6207,"start2":6207,"length1":16,"length2":29},{"diffs":[[0,"    "],[-1,"switch(ref) {\r\n                    case self.enumDBType.table: self.ListSources.data = data.objectList; break;\r\n                    case self.enumDBType.sproc: self.ListFunctions.data = data.objectList; break;\r\n                    case self.enumDBType.shares: self.ListShares.data = data.objectList; break;\r\n                }"],[0,"\r\n  "]],"start1":6267,"start2":6267,"length1":333,"length2":8}]],"length":6591,"saved":false}
{"ts":1350854855968,"patch":[[{"diffs":[[0,"url: url"],[1," + style"],[0,", async:"]],"start1":6194,"start2":6194,"length1":16,"length2":24}]],"length":6599,"saved":false}
{"ts":1350854887585,"patch":[[{"diffs":[[0,"l: url +"],[1," \"/style?\""],[0," style, "]],"start1":6196,"start2":6196,"length1":16,"length2":26}]],"length":6609,"saved":false}
{"ts":1350854917398,"patch":[[{"diffs":[[0," \"/style"],[-1,"?"],[0,"\" style,"]],"start1":6204,"start2":6204,"length1":17,"length2":16}]],"length":6608,"saved":false}
{"ts":1350855471153,"patch":[[{"diffs":[[0,"style= \""],[-1,"#\""],[1,"{style: #\" +"],[0," id + \"{"]],"start1":6084,"start2":6084,"length1":18,"length2":28},{"diffs":[[0,"y: 0.7;}"],[1,"}"],[0,"\";\r\n    "]],"start1":6157,"start2":6157,"length1":16,"length2":17}]],"length":6619,"saved":false}
{"ts":1350855484086,"patch":[[{"diffs":[[0," \"/style"],[-1,"\""],[1,"?\" +"],[0," style, "]],"start1":6215,"start2":6215,"length1":17,"length2":20}]],"length":6622,"saved":false}
{"ts":1350855807069,"patch":[[{"diffs":[[0,"      }\r"],[1,"\n            self.setStyle(el);\r"],[0,"\n\r\n     "]],"start1":5698,"start2":5698,"length1":16,"length2":48},{"diffs":[[0,"ar style"],[1," "],[0,"= \"{styl"]],"start1":6113,"start2":6113,"length1":16,"length2":17}]],"length":6655,"saved":false}
{"contributors":[],"silentsave":false,"ts":1353626158997,"patch":[[{"diffs":[[0,"his."],[-1,"MM_map = {}"],[1,"theLayers"],[0,";\r\n "]],"start1":290,"start2":290,"length1":19,"length2":17},{"diffs":[[0,"    "],[-1,"this.theLayers;\r\n            "],[1,"\r\n            /*this.MM_map = {};"],[0,"\r\n  "]],"start1":314,"start2":314,"length1":37,"length2":41},{"diffs":[[0,"      };"],[1,"*/\r\n\r\n            this.baseUrl'http://{s}.tile.cloudmade.com/{key}/22677/256/{z}/{x}/{y}.png';"],[0,"\r\n      "]],"start1":887,"start2":887,"length1":16,"length2":110},{"diffs":[[0,"ion(){\r\n"],[1,"\r\n"],[0,"    "],[1,"\t    var map = L.map('map').setView([39.74739, -105], 13);\r\n\r\n    \t\tL.tileLayer('http://{s}.tile.cloudmade.com/{key}/22677/256/{z}/{x}/{y}.png', {\r\n    \t\t\tattribution: 'Map data &copy; 2011 OpenStreetMap contributors, Imagery &copy; 2012 CloudMade',\r\n    \t\t\tkey: 'BC9A493B41014CAABB98F0471D759707'\r\n    \t\t}).addTo(map);\r\n"],[0,"        "]],"start1":4193,"start2":4193,"length1":20,"length2":343}]],"length":7074,"saved":false}
{"ts":1353626187977,"patch":[[{"diffs":[[0,"theLayers;\r\n"],[-1,"            \r\n"],[0,"            "]],"start1":294,"start2":294,"length1":38,"length2":24},{"diffs":[[0,"Map();\r\n\r\n\t\t},\r\n"],[1,"        /*\r\n"],[0,"        Map: fun"]],"start1":1050,"start2":1050,"length1":32,"length2":44},{"diffs":[[0,"        "],[1,"*/"],[0,"\r\n\t\t"],[1,"\r\n        "],[0,"loadMap:"]],"start1":4165,"start2":4165,"length1":20,"length2":32}]],"length":7084,"saved":false}
{"ts":1353626246178,"patch":[[{"diffs":[[0," L.map('"],[1,"my"],[0,"map').se"]],"start1":4231,"start2":4231,"length1":16,"length2":18},{"diffs":[[0,"ew(["],[-1,"39.74739, -105"],[1,"-34.5767, -58.437"],[0,"], 1"]],"start1":4252,"start2":4252,"length1":22,"length2":25}]],"length":7089,"saved":false}
{"ts":1353626288687,"patch":[[{"diffs":[[0,".baseUrl"],[1," = "],[0,"'http://"]],"start1":903,"start2":903,"length1":16,"length2":19},{"diffs":[[0,"yer("],[-1,"'http://{s}.tile.cloudmade.com/{key}/22677/256/{z}/{x}/{y}.png'"],[1,"this.baseURL"],[0,", {\r"]],"start1":4301,"start2":4301,"length1":71,"length2":20}]],"length":7041,"saved":false}
{"ts":1353626293809,"patch":[[{"diffs":[[0,"Map();\r\n\r\n\t\t},\r\n"],[1,"        \r\n"],[0,"        /*\r\n    "]],"start1":1053,"start2":1053,"length1":32,"length2":42}]],"length":7051,"saved":false}
{"ts":1353626384965,"patch":[[{"diffs":[[0,"p);\r"],[-1,"\n        \r\n            mainMap = this.Map('mymap', {\r\n                // Specify the MapBox API url\r\n                api: 'http://api.tiles.mapbox.com/v3/mapbox.mapbox-streets.jsonp',\r\n                center: {\r\n                    lat: -34.5767,      // Intial center point and zoom level.\r\n                    lon: -58.437,       // To find coordinates and zoom levels\r\n                    zoom: 12            // try: http://www.getlatlon.com or http://freegeoip.net/json/201.250.58.50\r\n                },\r\n                zoomRange: [0, 20],     // Limit zooming on the map to these levels\r\n                features: [             // Map features (see readme.md)\r\n                    'zoomwheel',\r\n                    'movetips',\r\n                    'zoombox',\r\n                    'zoompan'\r\n                ]\r\n            });\r"],[0,"\n\r\n\t"]],"start1":4500,"start2":4500,"length1":840,"length2":8}]],"length":6219,"saved":false}
{"ts":1353626409655,"patch":[[{"diffs":[[0,"y: '"],[-1,"BC9A493B41014CAABB98F0471D759707"],[1,"4ff6f0b6bc0d4f87bd6b982cc782b0b0"],[0,"'\r\n "]],"start1":4444,"start2":4444,"length1":40,"length2":40}]],"length":6219,"saved":false}
{"ts":1353626470425,"patch":[[{"diffs":[[0,"duleId });\r\n"],[1,"            this.Map = {};\r\n"],[0,"            "]],"start1":265,"start2":265,"length1":24,"length2":52}]],"length":6247,"saved":false}
{"ts":1353626481667,"patch":[[{"diffs":[[0,"   \t    "],[-1,"var m"],[1,"this.M"],[0,"ap = L.m"]],"start1":4255,"start2":4255,"length1":21,"length2":22}]],"length":6248,"saved":false}
{"ts":1353626491006,"patch":[[{"diffs":[[0,").addTo("],[-1,"m"],[1,"this.M"],[0,"ap);\r\n\r\n"]],"start1":4519,"start2":4519,"length1":17,"length2":22}]],"length":6253,"saved":false}
{"ts":1353626575311,"patch":[[{"diffs":[[0," }\r\n            "],[1,"//"],[0,"self.setStyle(el"]],"start1":5301,"start2":5301,"length1":32,"length2":34}]],"length":6255,"saved":false}
{"ts":1353626669694,"patch":[[{"diffs":[[0," '').slice(1);\r\n"],[1,"            $.ajax(\r\n            {\r\n                type: 'POST',\r\n                url: '/RetrieveCadastre',\r\n                dataType: 'json',\r\n                data: JSON.stringify(bounds),\r\n                contentType: 'application/json; charset=utf-8',\r\n                success: function (result) {\r\n                    parseResponseCadastre(result)\r\n                },\r\n                error: function (req, status, error) {\r\n                    alert('Unable to get cadastral data');\r\n                }\r\n            });"],[0,"\r\n            va"]],"start1":4800,"start2":4800,"length1":32,"length2":556}]],"length":6779,"saved":false}
{"ts":1353626837448,"patch":[[{"diffs":[[0,"  \r\n            "],[-1,"id"],[1,"var tablename"],[0," = id.replace(/."]],"start1":4751,"start2":4751,"length1":34,"length2":45},{"diffs":[[0,"        "],[-1,"$.ajax("],[1,"var fieldname = 'gid';"],[0,"\r\n      "]],"start1":4831,"start2":4831,"length1":23,"length2":38},{"diffs":[[0,"        "],[1,"$.ajax("],[0,"{\r\n     "]],"start1":4867,"start2":4867,"length1":16,"length2":23},{"diffs":[[0,": '/"],[-1,"RetrieveCadastre"],[1,"getGeoJson"],[0,"',\r\n"]],"start1":4935,"start2":4935,"length1":24,"length2":18},{"diffs":[[0,"y(bounds"],[1,",tablename,fieldname"],[0,"),\r\n    "]],"start1":5023,"start2":5023,"length1":16,"length2":36},{"diffs":[[0,"    "],[-1,"var url = _.template(self.layerURL, {dbname: db, table: id});\r\n            self.tilejson.tiles = [url + '.png'];\r\n            self.tilejson.grids = [url + '.grid.json'];\r\n            \r\n            var testMap = new wax.mm.connector(self.tilejson);"],[1,""],[0,"\r\n  "]],"start1":5397,"start2":5397,"length1":255,"length2":8}]],"length":6579,"saved":false}
{"ts":1353626996992,"patch":[[{"diffs":[[0,"heLayers"],[1," = {layername='', layer={}}"],[0,";\r\n     "]],"start1":323,"start2":323,"length1":16,"length2":43}]],"length":6606,"saved":false}
{"ts":1353627040328,"patch":[[{"diffs":[[0,"yers = {"],[1," "],[0,"layernam"]],"start1":327,"start2":327,"length1":16,"length2":17},{"diffs":[[0,"ayername"],[-1,"="],[1,":"],[0,"'', laye"]],"start1":337,"start2":337,"length1":17,"length2":17},{"diffs":[[0,"ayer"],[-1,"="],[1,":"],[0,"{}"],[1," "],[0,"};\r\n"]],"start1":351,"start2":351,"length1":11,"length2":12}]],"length":6608,"saved":false}
{"ts":1353627055622,"patch":[[{"diffs":[[0,"onse"],[-1,"Cadastre"],[0,"(res"]],"start1":5224,"start2":5224,"length1":16,"length2":8}]],"length":6600,"saved":false}
{"ts":1353627111585,"patch":[[{"diffs":[[0,"ion (res"],[-1,"ult"],[0,") {\r\n   "]],"start1":5179,"start2":5179,"length1":19,"length2":16},{"diffs":[[0,"(res"],[-1,"ult"],[1,".data"],[0,")\r\n "]],"start1":5225,"start2":5225,"length1":11,"length2":13}]],"length":6599,"saved":false}
{"ts":1353627137470,"patch":[[{"diffs":[[0,"        "],[1,"self."],[0,"parseRes"]],"start1":5204,"start2":5204,"length1":16,"length2":21},{"diffs":[[0,".data)\r\n"],[-1,""],[0,"        "]],"start1":5234,"start2":5234,"length1":16,"length2":16},{"diffs":[[0,");\r\n"],[-1,"            \r\n            try {\r\n                self.MM_map.setLayerAt(0, new wax.mm.connector(self.tilejson));\r\n            } catch (e) {\r\n                self.MM_map.insertLayerAt(0, new wax.mm.connector(self.tilejson));\r\n            }"],[0,"\r\n  "]],"start1":5410,"start2":5410,"length1":246,"length2":8}]],"length":6366,"saved":false}
{"ts":1353627168214,"patch":[[{"diffs":[[0,"lf.parse"],[1,"Layer"],[0,"Response"]],"start1":5214,"start2":5214,"length1":16,"length2":21},{"diffs":[[0,"yle(el);\r\n\r\n"],[1,"        },\r\n        parseLayerResponse:function() {\r\n            \r\n"],[0,"        },\r\n"]],"start1":5445,"start2":5445,"length1":24,"length2":91}]],"length":6438,"saved":false}
{"ts":1353627238064,"patch":[[{"diffs":[[0," {\r\n            "],[1,"var self = this;\r\n            if (cadastralLayer != undefined) {\r\n                self.Map.removeLayer(cadastralLayer);\r\n            }\r\n            cadastralLayer = new L.GeoJSON();\r\n            cadastralLayer.on('featureparse', function(e) {\r\n            e.layer.setStyle({ color:  '#003300', weight: 2, fill: true, fillColor: '#009933' });\r\n            });\r\n            cadastralLayer.addGeoJSON(data);\r\n            map.addLayer(cadastralLayer);"],[0,"\r\n        },\r\n  "]],"start1":5506,"start2":5506,"length1":32,"length2":479}]],"length":6885,"saved":false}
{"ts":1353627265850,"patch":[[{"diffs":[[0,"        "],[1,"    "],[0,"e.layer."]],"start1":5770,"start2":5770,"length1":16,"length2":20},{"diffs":[[0,"        "],[-1,"m"],[1,"self.M"],[0,"ap.addLa"]],"start1":5936,"start2":5936,"length1":17,"length2":22}]],"length":6894,"saved":false}
{"ts":1353627340473,"patch":[[{"diffs":[[0,"s = "],[-1,"{ layername:'', layer:{} }"],[1,"[]"],[0,";\r\n "]],"start1":330,"start2":330,"length1":34,"length2":10},{"diffs":[[0,"sponse:function("],[1,"layername"],[0,") {\r\n           "]],"start1":5465,"start2":5465,"length1":32,"length2":41}]],"length":6879,"saved":false}
{"ts":1353627581412,"patch":[[{"diffs":[[0,"    if ("],[-1,"cadastralLayer"],[1,"this.theLayers[layername]"],[0," != unde"]],"start1":5533,"start2":5533,"length1":30,"length2":41},{"diffs":[[0,"removeLayer("],[-1,"cadastralLayer"],[1,"this.theLayers[layername]"],[0,");\r\n        "]],"start1":5609,"start2":5609,"length1":38,"length2":49},{"diffs":[[0,"        "],[-1,"cadastralLayer"],[1,"this.theLayers[layername]"],[0," = new L"]],"start1":5669,"start2":5669,"length1":30,"length2":41},{"diffs":[[0,"        "],[-1,"cadastralLayer"],[1,"this.theLayers[layername]"],[0,".on('fea"]],"start1":5727,"start2":5727,"length1":30,"length2":41},{"diffs":[[0,"        "],[-1,"cadastralLayer"],[1,"this.theLayers[layername]"],[0,".addGeoJ"]],"start1":5919,"start2":5919,"length1":30,"length2":41},{"diffs":[[0,"yer("],[-1,"cadastralLayer"],[1,"this.theLayers[layername]"],[0,");\r\n"]],"start1":5998,"start2":5998,"length1":22,"length2":33}]],"length":6945,"saved":false}
{"ts":1353627873165,"patch":[[{"diffs":[[0,"lay: function(el"],[1," bounds"],[0,") {\r\n           "]],"start1":4567,"start2":4567,"length1":32,"length2":39},{"diffs":[[0,"($(this)"],[1,", self.Map.getBounds()"],[0,");\r\n\r\n  "]],"start1":6886,"start2":6886,"length1":16,"length2":38}]],"length":6974,"saved":false}
{"ts":1353627972021,"patch":[[{"diffs":[[0,"\r\n\r\n    "],[-1,"\t"],[1,"    "],[0,"    this"]],"start1":4255,"start2":4255,"length1":17,"length2":20},{"diffs":[[0,", 13);\r\n"],[1,"            "],[0,"\r\n    "],[1," "],[-1,"\t\t"],[1,"       "],[0,"L.tileLa"]],"start1":4324,"start2":4324,"length1":24,"length2":42},{"diffs":[[0," {\r\n    "],[-1,"\t\t\t"],[1,"        "],[0,"attribut"]],"start1":4383,"start2":4383,"length1":19,"length2":24},{"diffs":[[0,"',\r\n    "],[-1,"\t\t\t"],[1,"        "],[0,"key: '4f"]],"start1":4491,"start2":4491,"length1":19,"length2":24},{"diffs":[[0,"0'\r\n    "],[-1,"\t\t"],[1,"        "],[0,"}).addTo"]],"start1":4544,"start2":4544,"length1":18,"length2":24},{"diffs":[[0,".Map);\r\n\r\n\t\t},\r\n"],[1,"        \r\n"],[0,"        setOverl"]],"start1":4573,"start2":4573,"length1":32,"length2":42},{"diffs":[[0,"ction(el"],[1,","],[0," bounds)"]],"start1":4622,"start2":4622,"length1":16,"length2":17},{"diffs":[[0,",\r\n "],[-1,"       setStyle:function(el) {\r\n            var self = this;\r\n            \r\n            var $this = el,\r\n                db = $this.attr('DBName')\r\n                id = $this.attr('href'),\r\n            \r\n            id = id.replace(/.*(?=#[^\\s]+$)/, '').slice(1);\r\n\r\n            var url = _.template(self.baseStyleURL, {dbname: db, table: id});\r\n            var style = \"{style: #\" + id + \"{line-color:#FF6600; line-width:1; line-opacity: 0.7;}}\";\r\n            \r\n            $.ajax({ url: url + \"/style?\" + style, async: true, method:post }).then(function(data) {\r\n                \r\n            });         \r\n        \r\n        },\r\n"],[0,"    "]],"start1":6095,"start2":6095,"length1":639,"length2":8}]],"length":6391,"saved":false}
{"ts":1353628015517,"patch":[[{"diffs":[[0,"DBName')"],[1,","],[0,"\r\n      "]],"start1":4749,"start2":4749,"length1":16,"length2":17},{"diffs":[[0,"('href')"],[-1,","],[1,";"],[0,"\r\n      "]],"start1":4791,"start2":4791,"length1":17,"length2":17}]],"length":6392,"saved":false}
{"ts":1353628465853,"patch":[[{"diffs":[[0,"ion(){\r\n"],[-1,"\r\n"],[0,"        "]],"start1":4249,"start2":4249,"length1":18,"length2":16},{"diffs":[[0,"            "],[-1,"this"],[1,"var self = this;\r\n            self"],[0,".Map = L.map"]],"start1":4257,"start2":4257,"length1":28,"length2":58},{"diffs":[[0,"leLayer("],[-1,"this"],[1,"self"],[0,".baseURL"]],"start1":4390,"start2":4390,"length1":20,"length2":20},{"diffs":[[0,").addTo("],[-1,"this"],[1,"self"],[0,".Map);\r\n"]],"start1":4589,"start2":4589,"length1":20,"length2":20}]],"length":6420,"saved":false}
{"contributors":[],"silentsave":false,"ts":1353789163039,"patch":[[{"diffs":[[0,"loadMap("],[1,"this.baseUrl"],[0,");\r\n\r\n\t\t"]],"start1":1082,"start2":1082,"length1":16,"length2":28},{"diffs":[[0,"p: function("],[-1,""],[0,""],[1,"url"],[0,"){\r\n        "]],"start1":4253,"start2":4253,"length1":24,"length2":27},{"diffs":[[0,"        "],[-1,"L."],[1,"var "],[0,"tileLaye"]],"start1":4393,"start2":4393,"length1":18,"length2":20},{"diffs":[[0,"ayer"],[-1,"(self.baseURL"],[1," = new L.TileLayer(url"],[0,", {\r\n"],[1,"    "],[0,"    "]],"start1":4410,"start2":4410,"length1":26,"length2":39},{"diffs":[[0,"    "],[1,"    "],[0,"key: '"],[-1,"4ff6f0b6bc0d4f87bd6b982cc782b0b0'\r\n            }).addTo(self.Map"],[1,"BC9A493B41014CAABB98F0471D759707'\r\n            });\r\n            self.Map.addLayer(tileLayer"],[0,");\r\n"]],"start1":4561,"start2":4561,"length1":78,"length2":109},{"diffs":[[0,"    "],[-1,"$.ajax({\r\n                type: 'POST',\r\n                url: '/getGeoJson',\r\n                dataType: 'json',\r\n                data: JSON.stringify(bounds,tablename,fieldname),\r\n                contentType: 'application/json; charset=utf-8'"],[1,"var boundbox = new L.LatLngBounds(bounds._southWest, bounds._northEast);\r\n            var bbBox = {\r\n                _sWLat: boundbox.getSouthWest().lat,\r\n                _sWLon: boundbox.getSouthWest().lng,\r\n                _nELat: boundbox.getNorthEast().lat,\r\n                _nELon: boundbox.getNorthEast().lng\r\n            };\r\n                    \r\n            $.getJSON(\r\n                '/getGeoJson',\r\n                {_bbBox: bbBox, _tablename: tablename, _fieldname: fieldname}"],[0,",\r\n "]],"start1":5021,"start2":5021,"length1":250,"length2":495},{"diffs":[[0,"    "],[-1," success:"],[0," fun"]],"start1":5526,"start2":5526,"length1":17,"length2":8},{"diffs":[[0,"nse("],[-1,"res.data"],[1,"tablename, res"],[0,")\r\n "]],"start1":5589,"start2":5589,"length1":16,"length2":22},{"diffs":[[0,"               }"],[1,");/*"],[0,",\r\n             "]],"start1":5611,"start2":5611,"length1":32,"length2":36},{"diffs":[[0,"ert("],[-1,"'Unable to get cadastral data'"],[1,"req.responseText"],[0,");\r\n"]],"start1":5712,"start2":5712,"length1":38,"length2":24},{"diffs":[[0,"     });"],[1,"*/"],[0,"\r\n\r\n    "]],"start1":5762,"start2":5762,"length1":16,"length2":18},{"diffs":[[0,"ayername"],[1,", features"],[0,") {\r\n   "]],"start1":5861,"start2":5861,"length1":16,"length2":26},{"diffs":[[0,"    if ("],[-1,"this"],[1,"self"],[0,".theLaye"]],"start1":5922,"start2":5922,"length1":20,"length2":20},{"diffs":[[0,"removeLayer("],[-1,"this"],[1,"self"],[0,".theLayers[l"]],"start1":5998,"start2":5998,"length1":28,"length2":28},{"diffs":[[0,";\r\n            }"],[1,";"],[0,"\r\n            th"]],"start1":6036,"start2":6036,"length1":32,"length2":33},{"diffs":[[0,"};\r\n            "],[-1,"this"],[1,"var myStyle = {\r\n                \"color\": \"#ff7800\",\r\n                \"strokeColor\": \"blue\",\r\n                \"stroke-width\":\"2\"\r\n                \"weight\": 5,\r\n                \"opacity\": 0.65\r\n            };\r\n            self.theLayers[layername] = L.geoJson(features.features, {\r\n                style: myStyle\r\n            }).addTo(self.Map);\r\n            /*self"],[0,".theLayers[layer"]],"start1":6051,"start2":6051,"length1":36,"length2":396},{"diffs":[[0,");\r\n            "],[-1,"this"],[1,"self"],[0,".theLayers[layer"]],"start1":6469,"start2":6469,"length1":36,"length2":36},{"diffs":[[0,");\r\n            "],[-1,"this"],[1,"self"],[0,".theLayers[layer"]],"start1":6661,"start2":6661,"length1":36,"length2":36},{"diffs":[[0,".add"],[-1,"GeoJSON(data"],[1,"Data(features"],[0,");\r\n"]],"start1":6702,"start2":6702,"length1":20,"length2":21},{"diffs":[[0,"ddLayer("],[-1,"this"],[1,"self"],[0,".theLaye"]],"start1":6745,"start2":6745,"length1":20,"length2":20},{"diffs":[[0,"ers[layername]);"],[1,"*/"],[0,"\r\n        },\r\n  "]],"start1":6764,"start2":6764,"length1":32,"length2":34}]],"length":7089,"saved":false}
{"ts":1353789170632,"patch":[[{"diffs":[[0,"dth\":\"2\""],[1,","],[0,"\r\n      "]],"start1":6187,"start2":6187,"length1":16,"length2":17}]],"length":7090,"saved":false}
{"ts":1353789440076,"patch":[[{"diffs":[[0,": \"#"],[-1,"ff78"],[0,"0"],[1,"c"],[0,"0\",\r"]],"start1":6107,"start2":6107,"length1":13,"length2":10}]],"length":7087,"saved":false}
{"ts":1353789447014,"patch":[[{"diffs":[[0,"\": \""],[-1,"blue"],[1,"#0d0"],[0,"\",\r\n"]],"start1":6146,"start2":6146,"length1":12,"length2":12}]],"length":7087,"saved":false}
{"ts":1353789471638,"patch":[[{"diffs":[[0,"width\":\""],[-1,"2"],[1,"3"],[0,"\",\r\n    "]],"start1":6182,"start2":6182,"length1":17,"length2":17}]],"length":7087,"saved":false}
{"ts":1353789479593,"patch":[[{"diffs":[[0,"eight\": "],[-1,"5"],[1,"2"],[0,",\r\n     "]],"start1":6213,"start2":6213,"length1":17,"length2":17}]],"length":7087,"saved":false}
{"ts":1353789486906,"patch":[[{"diffs":[[0,"ity\": 0."],[-1,"6"],[1,"9"],[0,"5\r\n     "]],"start1":6246,"start2":6246,"length1":17,"length2":17}]],"length":7087,"saved":false}
{"ts":1353789743346,"patch":[[{"diffs":[[0,": \"#"],[1,"ff78"],[0,"0"],[-1,"c"],[0,"0\",\r"]],"start1":6107,"start2":6107,"length1":10,"length2":13}]],"length":7090,"saved":false}
{"contributors":[],"silentsave":false,"ts":1353789880070,"patch":[[{"diffs":[[0,"removeLayer("],[-1,"self.theLayers["],[0,"layername]);"]],"start1":5998,"start2":5998,"length1":39,"length2":24},{"diffs":[[0,"ayername"],[-1,"]"],[0,");\r\n    "]],"start1":6011,"start2":6011,"length1":17,"length2":16}]],"length":7074,"saved":false}
{"ts":1353789955610,"patch":[[{"diffs":[[0,"veLayer("],[1,"self.theLayers["],[0,"layernam"]],"start1":6002,"start2":6002,"length1":16,"length2":31},{"diffs":[[0,"ayername"],[1,"]"],[0,");\r\n    "]],"start1":6026,"start2":6026,"length1":16,"length2":17}]],"length":7090,"saved":false}
{"ts":1353789973197,"patch":[[{"diffs":[[0,"yername]);\r\n"],[1,"                self.theLayers[layername] = undefined;\r\n"],[0,"            "]],"start1":6027,"start2":6027,"length1":24,"length2":80}]],"length":7146,"saved":false}
{"contributors":[],"silentsave":false,"ts":1353790118623,"patch":[[{"diffs":[[0,");\r\n"],[-1,"                self.theLayers[layername] = undefined;\r\n"],[0,"    "]],"start1":6035,"start2":6035,"length1":64,"length2":8}]],"length":7090,"saved":false}
{"contributors":[],"silentsave":true,"ts":1353899344677,"patch":[[{"diffs":[[0,"gister(\""],[1,"ediror"],[0,"map-modu"]],"start1":6,"start2":6,"length1":16,"length2":22},{"diffs":[[0,"(sandbox){\r\n"],[-1,""],[0,"    /*\r\n    "]],"start1":41,"start2":41,"length1":24,"length2":24},{"diffs":[[0,"\t\t},\r\n        \r\n"],[1,"        handleLayerEvent: function() {\r\n            var self = this;\r\n            \r\n            $('body').on('click.map', '[data-control=\"layer\"]', function(e) {\r\n                self.setMSTileOverlay($(this));\r\n                //self.setOverlay($(this), self.Map.getBounds());\r\n            });   \r\n        },        \r\n        turnOnOffLayer: function(el) {        \r\n           var self = this;\r\n           \r\n           var $this = el,\r\n                id = $this.attr('href');\r\n            \r\n            var tablename = id.replace(/.*(?=#[^\\s]+$)/, '').slice(1);\r\n                \r\n            var $swith = $this.find('span');\r\n            var state = $swith.attr('state');\r\n            if(state==='on') {\r\n                if (self.theLayers[tablename] != undefined) {\r\n                    self.Map.removeLayer(self.theLayers[tablename]);\r\n                };\r\n                $swith.attr('state', 'off');\r\n                $swith.removeClass('text-light');\r\n                $swith.parent().addClass('text-grayed');\r\n                return false;\r\n            }\r\n            else {\r\n                $swith.attr('state', 'on');\r\n                $swith.addClass('text-light');\r\n                $swith.parent().removeClass('text-grayed');\r\n                return true;\r\n            }\r\n            \r\n        },\r\n"],[0,"        /*\r\n    "]],"start1":1114,"start2":1114,"length1":32,"length2":1339},{"diffs":[[0,"           });\r\n"],[1,"          \r\n"],[0,"            self"]],"start1":5924,"start2":5924,"length1":32,"length2":44},{"diffs":[[0,"ayer);\r\n\r\n\t\t},\r\n"],[1,"        setMSTileOverlay: function(el) {\r\n            var self = this;\r\n            \r\n            var turnOn = self.turnOnOffLayer(el);\r\n            if(turnOn) {\r\n                var $this = el,\r\n                    db = $this.attr('DBName'),\r\n                    id = $this.attr('href');\r\n                \r\n                var tablename = id.replace(/.*(?=#[^\\s]+$)/, '').slice(1);\r\n                var fieldname = 'gid';\r\n                var urlTemplate = 'http://localhost/cgi-bin/mapserv?';\r\n                urlTemplate += 'map=/home/yodeski/sites/mapserverdemo/postgis.map&';\r\n                urlTemplate += 'layers=' + tablename + '&';\r\n                urlTemplate += 'mode=tile&';\r\n                urlTemplate += 'tilemode=gmap&';\r\n                urlTemplate += 'tile={x}+{y}+{z}';\r\n                \r\n                var layer = new L.TileLayer(urlTemplate, {\r\n                    transparent: true,\r\n                    attribution: \"FOSM\"\r\n                });\r\n                self.theLayers[tablename] = layer;\r\n                self.Map.addLayer(layer);\r\n            }\r\n        },\r\n"],[0,"        \r\n      "]],"start1":5987,"start2":5987,"length1":32,"length2":1125},{"diffs":[[0," });"],[-1,"/*,\r\n                error: function (req, status, error) {\r\n                    alert(req.responseText);\r\n                }\r\n            });*/\r\n"],[0,"\r\n  "]],"start1":8043,"start2":8043,"length1":153,"length2":8},{"diffs":[[0,"width\":\""],[-1,"3"],[1,"1"],[0,"\",\r\n    "]],"start1":8458,"start2":8458,"length1":17,"length2":17},{"diffs":[[0,"eight\": "],[-1,"2"],[1,"1"],[0,",\r\n     "]],"start1":8489,"start2":8489,"length1":17,"length2":17},{"diffs":[[0,"features);\r\n"],[1,""],[0,"            "]],"start1":8985,"start2":8985,"length1":24,"length2":24},{"diffs":[[0,"*/\r\n"],[-1,"        },\r\n         \r\n        handleLayerEvent: function() {\r\n            var self = this;\r\n            \r\n            $('body').on('click.map', '[data-control=\"layer\"]', function(e) {\r\n                self.setOverlay($(this), self.Map.getBounds());\r\n\r\n            });\r\n            \r\n"],[0,"    "]],"start1":9054,"start2":9054,"length1":292,"length2":8}]],"length":9079,"saved":false}
{"ts":1353899345603,"patch":[[{"diffs":[[0,"er(\"edir"],[-1,"or"],[0,"map-modu"]],"start1":10,"start2":10,"length1":18,"length2":16}]],"length":9077,"saved":false}
{"ts":1353899347545,"patch":[[{"diffs":[[0,"ter(\"edi"],[-1,"r"],[1,"t"],[0,"map-modu"]],"start1":9,"start2":9,"length1":17,"length2":17}]],"length":9077,"saved":false}
{"ts":1353899348900,"patch":[[{"diffs":[[0,"er(\"edit"],[1,"or"],[0,"map-modu"]],"start1":10,"start2":10,"length1":16,"length2":18}]],"length":9079,"saved":false}
{"ts":1353899350279,"patch":[[{"diffs":[[0,"(\"editor"],[-1,"map"],[0,"-module\""]],"start1":12,"start2":12,"length1":19,"length2":16}]],"length":9076,"saved":false}
{"ts":1353899356002,"patch":[[{"diffs":[[0,"*/\r\n"],[-1,"\tvar mainMap;\r\n"],[0,"    "]],"start1":79,"start2":79,"length1":23,"length2":8}]],"length":9061,"saved":false}
{"ts":1353899360133,"patch":[[{"diffs":[[0,"\r\n\r\n"],[-1,"\t\tobjSource: {}, //objeto tabla/view\r\n"],[0,"    "]],"start1":95,"start2":95,"length1":46,"length2":8}]],"length":9023,"saved":false}
{"ts":1353899360775,"patch":[[{"diffs":[[0,"turn {\r\n"],[-1,"\r\n"],[0,"        "]],"start1":89,"start2":89,"length1":18,"length2":16}]],"length":9021,"saved":false}
{"ts":1353899369457,"patch":[[{"diffs":[[0," = \""],[-1,"MyMap"],[1,"ediroe"],[0,"\";\r\n"]],"start1":144,"start2":144,"length1":13,"length2":14}]],"length":9022,"saved":false}
{"ts":1353899370539,"patch":[[{"diffs":[[0,"edir"],[-1,"oe"],[0,"\";\r\n"]],"start1":148,"start2":148,"length1":10,"length2":8}]],"length":9020,"saved":false}
{"ts":1353899371162,"patch":[[{"diffs":[[0,"d = \"edi"],[-1,"r"],[0,"\";\r\n\t\t\tt"]],"start1":143,"start2":143,"length1":17,"length2":16}]],"length":9019,"saved":false}
{"ts":1353899372236,"patch":[[{"diffs":[[0,"d = \"edi"],[1,"tor"],[0,"\";\r\n\t\t\tt"]],"start1":143,"start2":143,"length1":16,"length2":19}]],"length":9022,"saved":false}
{"ts":1353899388194,"patch":[[{"diffs":[[0,");\r\n"],[-1,"            this.Map = {};\r\n"],[0,"    "]],"start1":222,"start2":222,"length1":36,"length2":8}]],"length":8994,"saved":false}
{"ts":1353899392944,"patch":[[{"diffs":[[0,");\r\n"],[-1,"            this.theLayers = [];\r\n            /*this.MM_map = {};\r\n            this.baseUrl = 'http://api.tiles.mapbox.com/v3/mapbox.mapbox-streets.jsonp';\r\n            this.layerURL = \"http://tiles.appgis.com/database/<%= dbname %>/table/<%= table %>/{z}/{x}/{y}\";\r\n            this.baseStyleURL = \"http://tiles.appgis.com/database/<%= dbname %>/table/<%= table %>\";\r\n            this.tilejson = {\r\n                tilejson: '1.0.0',\r\n                scheme: 'xyz',\r\n                tiles: [],\r\n                grids: [],\r\n                formatter: function(options, data) { return data.id }\r\n"],[0,"    "]],"start1":222,"start2":222,"length1":603,"length2":8}]],"length":8399,"saved":false}
{"ts":1353899395448,"patch":[[{"diffs":[[0,"});\r"],[-1,"\n            };*/\r"],[0,"\n\r\n "]],"start1":221,"start2":221,"length1":26,"length2":8}]],"length":8381,"saved":false}
{"ts":1353899397883,"patch":[[{"diffs":[[0,"\r\n\r\n"],[-1,"            this.baseUrl = 'http://{s}.tile.cloudmade.com/{key}/22677/256/{z}/{x}/{y}.png';\r\n"],[0,"    "]],"start1":224,"start2":224,"length1":101,"length2":8}]],"length":8288,"saved":false}
{"ts":1353899398599,"patch":[[{"diffs":[[0," });\r\n\r\n"],[-1,"            \r\n"],[0,"        "]],"start1":220,"start2":220,"length1":30,"length2":16}]],"length":8274,"saved":false}
{"ts":1353899401268,"patch":[[{"diffs":[[0,"\r\n\r\n"],[-1,"            this.handleLayerEvent();\r\n"],[0,"    "]],"start1":224,"start2":224,"length1":46,"length2":8}]],"length":8236,"saved":false}
{"ts":1353899406328,"patch":[[{"diffs":[[0,"his.load"],[1,"Ediro"],[0,"Map(this"]],"start1":241,"start2":241,"length1":16,"length2":21}]],"length":8241,"saved":false}
{"ts":1353899407427,"patch":[[{"diffs":[[0,".loadEdi"],[-1,"ro"],[0,"Map(this"]],"start1":244,"start2":244,"length1":18,"length2":16}]],"length":8239,"saved":false}
{"ts":1353899408899,"patch":[[{"diffs":[[0,".loadEdi"],[1,"tor"],[0,"Map(this"]],"start1":244,"start2":244,"length1":16,"length2":19}]],"length":8242,"saved":false}
{"ts":1353899410827,"patch":[[{"diffs":[[0,"adEditor"],[-1,"Map"],[0,"(this.ba"]],"start1":247,"start2":247,"length1":19,"length2":16}]],"length":8239,"saved":false}
{"ts":1353899415489,"patch":[[{"diffs":[[0,"tor("],[-1,"this.baseUrl"],[0,");\r\n"]],"start1":252,"start2":252,"length1":20,"length2":8}]],"length":8227,"saved":false}
{"ts":1353899421480,"patch":[[{"diffs":[[0,"    "],[-1,"\r\n        handleLayerEvent: function() {\r\n            var self = this;\r\n            \r\n            $('body').on('click.map', '[data-control=\"layer\"]', function(e) {\r\n                self.setMSTileOverlay($(this));\r\n                //self.setOverlay($(this), self.Map.getBounds());\r\n            });   \r\n        },"],[0,"    "]],"start1":272,"start2":272,"length1":319,"length2":8}]],"length":7916,"saved":false}
{"ts":1353899432928,"patch":[[{"diffs":[[0,"  \r\n"],[-1,"        turnOnOffLayer: function(el) {        \r\n           var self = this;\r\n           \r\n           var $this = el,\r\n                id = $this.attr('href');\r\n            \r\n            var tablename = id.replace(/.*(?=#[^\\s]+$)/, '').slice(1);\r\n                \r\n            var $swith = $this.find('span');\r\n            var state = $swith.attr('state');\r\n            if(state==='on') {\r\n                if (self.theLayers[tablename] != undefined) {\r\n                    self.Map.removeLayer(self.theLayers[tablename]);\r\n                };\r\n                $swith.attr('state', 'off');\r\n                $swith.removeClass('text-light');\r\n                $swith.parent().addClass('text-grayed');\r\n                return false;\r\n            }\r\n            else {\r\n                $swith.attr('state', 'on');\r\n                $swith.addClass('text-light');\r\n                $swith.parent().removeClass('text-grayed');\r\n                return true;\r\n            }\r\n            \r\n        },\r\n        /*\r\n        Map: function(el, l, callback) {\r\n            var self = this;\r\n            wax.tilejson(l.api, function(t) {\r\n                var handlers = [\r\n                    new MM.DragHandler(),\r\n                    new MM.DoubleClickHandler(),\r\n                    new MM.TouchHandler()\r\n                ];\r\n                if ($.inArray('zoomwheel', l.features) >= 0) {\r\n                    handlers.push(new MM.MouseWheelHandler());\r\n                }\r\n    \r\n                self.MM_map = new MM.Map(el, new wax.mm.connector(t), null, handlers);\r\n                self.MM_map.setCenterZoom({\r\n                    lat: (l.center) ? l.center.lat : t.center[1],\r\n                    lon: (l.center) ? l.center.lon : t.center[0]\r\n                }, (l.center) ? l.center.zoom : t.center[2]);\r\n    \r\n                if (l.zoomRange) {\r\n                    self.MM_map.setZoomRange(l.zoomRange[0], l.zoomRange[1]);\r\n                } else {\r\n                    self.MM_map.setZoomRange(t.minzoom, t.maxzoom);\r\n                }\r\n    \r\n                wax.mm.attribution(self.MM_map, t).appendTo(self.MM_map.parent);\r\n    \r\n                for (var i = 0; i < l.features.length; i++) {\r\n                    switch(l.features[i]) {\r\n                        case 'zoompan':\r\n                            wax.mm.zoomer(self.MM_map).appendTo(self.MM_map.parent);\r\n                            break;\r\n                        case 'zoombox':\r\n                            wax.mm.zoombox(self.MM_map);\r\n                            break;\r\n                        case 'legend':\r\n                            self.MM_map.legend = wax.mm.legend(self.MM_map, t).appendTo(self.MM_map.parent);\r\n                            break;\r\n                        case 'bwdetect':\r\n                            wax.mm.bwdetect(self.MM_map);\r\n                            break;\r\n                        case 'share':\r\n                            wax.mm.share(self.MM_map, t).appendTo($('body')[0]);\r\n                            break;\r\n                        case 'tooltips':\r\n                            self.MM_map.interaction = wax.mm.interaction()\r\n                                .map(self.MM_map)\r\n                                .tilejson(t)\r\n                                .on(wax.tooltip()\r\n                                    .parent(self.MM_map.parent)\r\n                                    .events()\r\n                                );\r\n                            break;\r\n                        case 'movetips':\r\n                            self.MM_map.interaction = wax.mm.interaction()\r\n                                .map(self.MM_map)\r\n                                .tilejson(t)\r\n                                .on(wax.movetip()\r\n                                    .parent(self.MM_map.parent)\r\n                                    .events()\r\n                                );\r\n                            break;\r\n                    }\r\n                }\r\n                if (callback && typeof(callback) == 'function') callback();\r\n            });\r\n            return self.MM_map;\r\n        },\r\n        */\r\n"],[0,"\t\t\r\n"]],"start1":282,"start2":282,"length1":4107,"length2":8}]],"length":3817,"saved":false}
{"ts":1353899435567,"patch":[[{"diffs":[[0,"},\r\n"],[-1,"                \r\n\t\t\r\n"],[0,"    "]],"start1":264,"start2":264,"length1":30,"length2":8}]],"length":3795,"saved":false}
{"ts":1353899439565,"patch":[[{"diffs":[[0,"    load"],[1,"Editor"],[0,"Map: fun"]],"start1":272,"start2":272,"length1":16,"length2":22}]],"length":3801,"saved":false}
{"ts":1353899441075,"patch":[[{"diffs":[[0,"adEditor"],[-1,"Map"],[0,": functi"]],"start1":278,"start2":278,"length1":19,"length2":16}]],"length":3798,"saved":false}
{"ts":1353899444876,"patch":[[{"diffs":[[0,"unction("],[-1,"url"],[0,"){\r\n    "]],"start1":289,"start2":289,"length1":19,"length2":16}]],"length":3795,"saved":false}
{"ts":1353899450616,"patch":[[{"diffs":[[0,"r self = this;\r\n"],[1,"            \r\n"],[0,"            self"]],"start1":315,"start2":315,"length1":32,"length2":46}]],"length":3809,"saved":false}
{"ts":1353899453623,"patch":[[{"diffs":[[0,"s;\r\n"],[-1,"            \r\n            self.Map = L.map('mymap').setView([-34.5767, -58.437], 13);\r\n            \r\n            var tileLayer = new L.TileLayer(url, {\r\n                attribution: 'Map data &copy; 2011 OpenStreetMap contributors, Imagery &copy; 2012 CloudMade',\r\n                key: 'BC9A493B41014CAABB98F0471D759707'\r\n            });\r\n"],[0,"    "]],"start1":327,"start2":327,"length1":347,"length2":8}]],"length":3470,"saved":false}
{"ts":1353899454759,"patch":[[{"diffs":[[0,"is;\r"],[-1,"\n          \r\n            self.Map.addLayer(tileLayer);\r"],[0,"\n\r\n\t"]],"start1":326,"start2":326,"length1":63,"length2":8}]],"length":3415,"saved":false}
{"ts":1353899465584,"patch":[[{"diffs":[[0,"\n\t\t}"],[-1,",\r\n        setMSTileOverlay: function(el) {\r\n            var self = this;\r\n            \r\n            var turnOn = self.turnOnOffLayer(el);\r\n            if(turnOn) {\r\n                var $this = el,\r\n                    db = $this.attr('DBName'),\r\n                    id = $this.attr('href');\r\n                \r\n                var tablename = id.replace(/.*(?=#[^\\s]+$)/, '').slice(1);\r\n                var fieldname = 'gid';\r\n                var urlTemplate = 'http://localhost/cgi-bin/mapserv?';\r\n                urlTemplate += 'map=/home/yodeski/sites/mapserverdemo/postgis.map&';\r\n                urlTemplate += 'layers=' + tablename + '&';\r\n                urlTemplate += 'mode=tile&';\r\n                urlTemplate += 'tilemode=gmap&';\r\n                urlTemplate += 'tile={x}+{y}+{z}';\r\n                \r\n                var layer = new L.TileLayer(urlTemplate, {\r\n                    transparent: true,\r\n                    attribution: \"FOSM\"\r\n                });\r\n                self.theLayers[tablename] = layer;\r\n                self.Map.addLayer(layer);\r\n            }\r\n        },\r\n        \r\n        setOverlay: function(el, bounds) {\r\n            var self = this;\r\n            \r\n            var $this = el,\r\n                db = $this.attr('DBName'),\r\n                id = $this.attr('href');\r\n            \r\n            var tablename = id.replace(/.*(?=#[^\\s]+$)/, '').slice(1);\r\n            var fieldname = 'gid';\r\n            var boundbox = new L.LatLngBounds(bounds._southWest, bounds._northEast);\r\n            var bbBox = {\r\n                _sWLat: boundbox.getSouthWest().lat,\r\n                _sWLon: boundbox.getSouthWest().lng,\r\n                _nELat: boundbox.getNorthEast().lat,\r\n                _nELon: boundbox.getNorthEast().lng\r\n            };\r\n                    \r\n            $.getJSON(\r\n                '/getGeoJson',\r\n                {_bbBox: bbBox, _tablename: tablename, _fieldname: fieldname},\r\n                function (res) {\r\n                    self.parseLayerResponse(tablename, res)\r\n                });\r\n            //self.setStyle(el);\r\n\r\n        },\r\n        parseLayerResponse:function(layername, features) {\r\n            var self = this;\r\n            if (self.theLayers[layername] != undefined) {\r\n                self.Map.removeLayer(self.theLayers[layername]);\r\n            };\r\n            var myStyle = {\r\n                \"color\": \"#ff7800\",\r\n                \"strokeColor\": \"#0d0\",\r\n                \"stroke-width\":\"1\",\r\n                \"weight\": 1,\r\n                \"opacity\": 0.95\r\n            };\r\n            self.theLayers[layername] = L.geoJson(features.features, {\r\n                style: myStyle\r\n            }).addTo(self.Map);\r\n            /*self.theLayers[layername] = new L.GeoJSON();\r\n            self.theLayers[layername].on('featureparse', function(e) {\r\n                e.layer.setStyle({ color:  '#003300', weight: 2, fill: true, fillColor: '#009933' });\r\n            });\r\n            self.theLayers[layername].addData(features);\r\n            self.Map.addLayer(self.theLayers[layername]);*/\r\n        }"],[0,"\r\n\r\n"]],"start1":332,"start2":332,"length1":3075,"length2":8}]],"length":348,"saved":false}
{"ts":1353899520385,"patch":[[{"diffs":[[0," this;\r\n"],[1,"            "],[0,"\r\n\t\t}\r\n\r"]],"start1":323,"start2":323,"length1":16,"length2":28}]],"length":360,"saved":false}
{"ts":1353899521605,"patch":[[{"diffs":[[0,"            "],[1,"$(\"#maincontainer\").append(sandbox.fetchTemplate(sandbox.getTemplatesPath('header'), []));"],[0,"\r\n\t\t}\r\n\r\n\t};"]],"start1":331,"start2":331,"length1":24,"length2":114}]],"length":450,"saved":false}
{"ts":1353899536991,"patch":[[{"diffs":[[0,"$(\"#"],[-1,"mainc"],[1,"rightSidebarC"],[0,"onta"]],"start1":343,"start2":343,"length1":13,"length2":21}]],"length":458,"saved":false}
{"ts":1353899550988,"patch":[[{"diffs":[[0,"th('"],[-1,"header"],[0,"'), "]],"start1":422,"start2":422,"length1":14,"length2":8}]],"length":452,"saved":false}
{"ts":1353899552815,"patch":[[{"diffs":[[0,"esPath('"],[1,"editor"],[0,"'), []))"]],"start1":418,"start2":418,"length1":16,"length2":22}]],"length":458,"saved":false}
