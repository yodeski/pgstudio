{"ts":1349485271131,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"(function(root) {\n    var Map = {},\n        layers;\n\n    Map = function(el, l, callback) {\n        wax.tilejson(l.api, function(t) {\n            var handlers = [\n                new MM.DragHandler(),\n                new MM.DoubleClickHandler(),\n                new MM.TouchHandler()\n            ];\n            if ($.inArray('zoomwheel', l.features) >= 0) {\n                handlers.push(new MM.MouseWheelHandler());\n            }\n\n            MM_map = new MM.Map(el, new wax.mm.connector(t), null, handlers);\n            MM_map.setCenterZoom({\n                lat: (l.center) ? l.center.lat : t.center[1],\n                lon: (l.center) ? l.center.lon : t.center[0]\n            }, (l.center) ? l.center.zoom : t.center[2]);\n\n            if (l.zoomRange) {\n                MM_map.setZoomRange(l.zoomRange[0], l.zoomRange[1]);\n            } else {\n                MM_map.setZoomRange(t.minzoom, t.maxzoom);\n            }\n\n            wax.mm.attribution(MM_map, t).appendTo(MM_map.parent);\n\n            for (var i = 0; i < l.features.length; i++) {\n                switch(l.features[i]) {\n                    case 'zoompan':\n                        wax.mm.zoomer(MM_map).appendTo(MM_map.parent);\n                        break;\n                    case 'zoombox':\n                        wax.mm.zoombox(MM_map);\n                        break;\n                    case 'legend':\n                        MM_map.legend = wax.mm.legend(MM_map, t).appendTo(MM_map.parent);\n                        break;\n                    case 'bwdetect':\n                        wax.mm.bwdetect(MM_map);\n                        break;\n                    case 'share':\n                        wax.mm.share(MM_map, t).appendTo($('body')[0]);\n                        break;\n                    case 'tooltips':\n                        MM_map.interaction = wax.mm.interaction()\n                            .map(MM_map)\n                            .tilejson(t)\n                            .on(wax.tooltip()\n                                .parent(MM_map.parent)\n                                .events()\n                            );\n                        break;\n                    case 'movetips':\n                        MM_map.interaction = wax.mm.interaction()\n                            .map(MM_map)\n                            .tilejson(t)\n                            .on(wax.movetip()\n                                .parent(MM_map.parent)\n                                .events()\n                            );\n                        break;\n                }\n            }\n            if (callback && typeof(callback) == 'function') callback();\n        });\n        return Map;\n    };\n\n    Map.layers = function(x) {\n        if (!arguments.length) return layers;\n        layers = x;\n        return Map;\n    };\n\n    Map.setOverlay = function(id) {\n\n        if (!layers[id]) throw new Error('overlay with id ' + id + ' not found');\n        var l = layers[id];\n\n        wax.tilejson(l.api, function(t) {\n            var level = (l.level === 'base') ? 0 : 1;\n            \n            try {\n                MM_map.setLayerAt(level, new wax.mm.connector(t));\n            } catch (e) {\n                MM_map.insertLayerAt(level, new wax.mm.connector(t));\n            }\n            if (MM_map.interaction) MM_map.interaction.map(MM_map).tilejson(t);\n            if (MM_map.legend) {\n                MM_map.legend.content(t);\n            }\n        });\n\n        if (l.center) {\n            var lat = l.center.lat || MM_map.getCenter().lat,\n                lon = l.center.lon || MM_map.getCenter().lon,\n                zoom = l.center.zoom || MM_map.getZoom();\n\n            if (l.center.ease > 0) {\n                MM_map.easey = easey().map(MM_map)\n                    .to(MM_map.locationCoordinate({ lat: lat, lon: lon })\n                    .zoomTo(zoom)).run(l.center.ease);\n            } else {\n                MM_map.setCenterZoom({ lat: lat, lon: lon }, zoom);\n            }\n        }\n    };\n\n    Map.removeOverlay = function(id) {\n\n        if (!layers[id]) throw new Error('overlay with id ' + id + ' not found');\n        var l = layers[id];\n\n        var level = (l.level === 'base') ? 0 : 1;\n        MM_map.removeLayerAt(level);\n        if (MM_map.legend) MM_map.legend.content(' ');\n        if (MM_map.interaction) MM_map.interaction.remove();\n    };\n\n    root.Map = Map;\n\n})(this);\n\n// Bind the geocoder functionality to any div with the format\n//\n//     <div data-control='geocode' id=\"search\">\n//        <form class=\"geocode\">\n//          <input placeholder='Search for an address' type=\"text\">\n//          <input type='submit' />\n//          <div id='geocode-error'></div>\n//        </form>\n//      </div>\n//\nfunction bindGeocoder() {\n    $('[data-control=\"geocode\"] form').submit(function(e) {\n        var m = $('[data-control=\"geocode\"]').attr('data-map');\n        // If this doesn't explicitly name the layer it should affect,\n        // use the first layer in MB.maps\n        e.preventDefault();\n        geocode($('input[type=text]', this).val(), m);\n    });\n    var geocode = function(query, m) {\n        query = encodeURIComponent(query);\n        $('form.geocode').addClass('loading');\n        reqwest({\n            url: 'http://open.mapquestapi.com/nominatim/v1/search?format=json&json_callback=callback&&limit=1&q=' + query,\n            type: 'jsonp',\n            jsonpCallback: 'callback',\n            success: function (r) {\n                r = r[0];\n\n                if (MM_map.geocodeLayer) {\n                    MM_map.geocodeLayer.removeAllMarkers();\n                }\n\n                $('form.geocode').removeClass('loading');\n\n                if (r === undefined) {\n                    $('#geocode-error').text('This address cannot be found.').fadeIn('fast');\n                } else {\n                    $('#geocode-error').hide();\n                    MM_map.setExtent([\n                        { lat: r.boundingbox[1], lon: r.boundingbox[2] },\n                        { lat: r.boundingbox[0], lon: r.boundingbox[3] }\n                    ]);\n\n                    if (MM_map.getZoom() === MM_map.coordLimits[1].zoom) {\n                        var point = { 'type': 'FeatureCollection',\n                            'features': [{ 'type': 'Feature',\n                            'geometry': { 'type': 'Point','coordinates': [r.lon, r.lat] },\n                            'properties': {}\n                        }]};\n\n                        if (MM_map.geocodeLayer) {\n                            MM_map.geocodeLayer.removeAllMarkers();\n                            MM_map.geocodeLayer.geojson(point);\n                        } else {\n                            MM_map.geocodeLayer = mmg()\n                                .geojson(point);\n                            MM_map.addLayer(MM_map.geocodeLayer);\n                        }\n\n                        MM_map.setCenter({ lat: r.lat, lon: r.lon });\n                    }\n                }\n            }\n        });\n        var attribution = 'Search by <a href=\"http://developer.mapquest.com/web/products/open\">MapQuest Open</a>';\n        if ($('.wax-attribution').html().indexOf(attribution) < 0) {\n            $('.wax-attribution').append(' - ' + attribution);\n        }\n    };\n}\n\n$(function() {\n    if (location.hash === '#embed') $('body').removeClass().addClass('embed');\n\n    $('body').on('click.map', '[data-control=\"layer\"]', function(e) {\n        var $this = $(this),\n            id = $this.attr('href');\n        id = id.replace(/.*(?=#[^\\s]+$)/, '').slice(1);\n        var m = $('[data-control=\"geocode\"]').attr('data-map') || 'main';\n        e.preventDefault();\n        if($this.hasClass('active')) {\n            $('[data-control=\"layer\"]').removeClass('active');\n            window[m].removeOverlay(id);        \n        } else {\n            $('[data-control=\"layer\"]').removeClass('active');\n            $this.addClass('active');\n            window[m].setOverlay(id);\n        }\n    });\n\n    bindGeocoder();\n});\n"]],"start1":0,"start2":0,"length1":0,"length2":7978}]],"length":7978}
{"contributors":[],"silentsave":false,"ts":1349485309853,"patch":[[{"diffs":[[0,"            "],[1,"/*"],[0,"case 'share'"]],"start1":1621,"start2":1621,"length1":24,"length2":26},{"diffs":[[0,"          break;"],[1,"*/"],[0,"\n               "]],"start1":1735,"start2":1735,"length1":32,"length2":34}]],"length":7982,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350359494955,"patch":[[{"diffs":[[0,"|| 'main"],[1,"Map"],[0,"';\n     "]],"start1":7593,"start2":7593,"length1":16,"length2":19}]],"length":7985,"saved":false}
{"ts":1350360661245,"patch":[[{"diffs":[[0,"('embed');\n\n"],[1,"//"],[0,"    $('body'"]],"start1":7326,"start2":7326,"length1":24,"length2":26},{"diffs":[[0,", function(e) {\n"],[1,"//"],[0,"        var $thi"]],"start1":7394,"start2":7394,"length1":32,"length2":34},{"diffs":[[0,"(this),\n"],[1,"//"],[0,"        "]],"start1":7433,"start2":7433,"length1":16,"length2":18},{"diffs":[[0,"tr('href');\n"],[1,"//"],[0,"        id ="]],"start1":7468,"start2":7468,"length1":24,"length2":26},{"diffs":[[0,"ice(1);\n"],[1,"//"],[0,"        "]],"start1":7530,"start2":7530,"length1":16,"length2":18},{"diffs":[[0,"inMap';\n"],[1,"//"],[0,"        "]],"start1":7609,"start2":7609,"length1":16,"length2":18},{"diffs":[[0,"eventDefault();\n"],[1,"//"],[0,"        if($this"]],"start1":7631,"start2":7631,"length1":32,"length2":34},{"diffs":[[0,"active')) {\n"],[1,"//"],[0,"            "]],"start1":7676,"start2":7676,"length1":24,"length2":26},{"diffs":[[0,"lass('active');\n"],[1,"//"],[0,"            wind"]],"start1":7737,"start2":7737,"length1":32,"length2":34},{"diffs":[[0,"ay(id);        \n"],[1,"//"],[0,"        } else {"]],"start1":7788,"start2":7788,"length1":32,"length2":34},{"diffs":[[0,"       } else {\n"],[1,"//"],[0,"            $('["]],"start1":7807,"start2":7807,"length1":32,"length2":34},{"diffs":[[0,"lass('active');\n"],[1,"//"],[0,"            $thi"]],"start1":7872,"start2":7872,"length1":32,"length2":34},{"diffs":[[0,"('active');\n"],[1,"//"],[0,"            "]],"start1":7916,"start2":7916,"length1":24,"length2":26},{"diffs":[[0,"ay(id);\n"],[1,"//"],[0,"        "]],"start1":7960,"start2":7960,"length1":16,"length2":18},{"diffs":[[0,"//        }\n"],[1,"//"],[0,"    });\n\n   "]],"start1":7968,"start2":7968,"length1":24,"length2":26}]],"length":8015,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350566759923,"patch":[[{"diffs":[[0,"layers;\n"],[1,"    Map = new L.Map('map');"],[0,"\n    Map"]],"start1":44,"start2":44,"length1":16,"length2":43}]],"length":8042,"saved":false}
{"ts":1350566828535,"patch":[[{"diffs":[[0,"Map('map');\n"],[1,"    var baseURL = \"http://tiles.appgis.com/database/<%= dbname %>/table/<%= table %>/{z}/{x}/{y}\";\n    \n    /*\n"],[0,"    Map = fu"]],"start1":68,"start2":68,"length1":24,"length2":135},{"diffs":[[0,"urn Map;\n    };\n"],[1,"    /*"],[0,"\n    Map.layers "]],"start1":2799,"start2":2799,"length1":32,"length2":38},{"diffs":[[0,"p = Map;"],[1,"\n    */"],[0,"\n\n})(thi"]],"start1":4499,"start2":4499,"length1":16,"length2":23}]],"length":8166,"saved":false}
{"ts":1350566863455,"patch":[[{"diffs":[[0,"}/{y}\";\n"],[1,"    var layers = [];\n    var tilejson = {\n        tilejson: '1.0.0',\n        scheme: 'xyz',\n        tiles: [],\n        grids: [],\n        formatter: function(options, data) { return data.id }\n    };\n"],[0,"    \n   "]],"start1":171,"start2":171,"length1":16,"length2":215}]],"length":8365,"saved":false}
{"ts":1350566973510,"patch":[[{"diffs":[[0,"    };\n    \n"],[1,"    \n"],[0,"    /*\n    M"]],"start1":371,"start2":371,"length1":24,"length2":29},{"diffs":[[0,"ak;\n"],[-1,"                    /*case 'share':\n                        wax.mm.share(MM_map, t).appendTo($('body')[0]);\n                        break;*/\n"],[0,"    "]],"start1":1951,"start2":1951,"length1":149,"length2":8}]],"length":8229,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350568027415,"patch":[[{"diffs":[[0,") {\n    "],[-1,"var "],[0,"Map = {}"]],"start1":14,"start2":14,"length1":20,"length2":16},{"diffs":[[0,"p = {},\n"],[1,""],[0,"        "]],"start1":24,"start2":24,"length1":16,"length2":16},{"diffs":[[0,"\n    };\n"],[-1,"    "],[0,"\n    "],[1,"Map.setOverlay = function() {\n        var dbname = \"pgs_buenos_aires\";//$('#dbname').val();\n        var table = \"lineassubte\";//$('#table').val();\n\n        var url = _.template(baseURL, {dbname: dbname, table: table});\n\n        tilejson.tiles = [url + '.png'];\n        tilejson.grids = [url + '.grid.json'];\n\n        _.each(layers, function(layer){\n            Map.removeLayer(layer)\n        });\n\n        var testMap = new wax.leaf.connector(tilejson);\n        Map.addLayer(testMap);\n        Map.setView(new L.LatLng(51.505, -0.09), 1, true);\n        wax.leaf.interaction(map, tilejson);\n        layers.push(testMap);\n    }\n"],[0,"\n    /*\n"]],"start1":366,"start2":366,"length1":25,"length2":645},{"diffs":[[0," 0 : 1;\n"],[-1,"            "],[0,"\n       "]],"start1":3862,"start2":3862,"length1":28,"length2":16},{"diffs":[[0,"lay(id);"],[-1,"        "],[0,"\n//     "]],"start1":8605,"start2":8605,"length1":24,"length2":16}]],"length":8825,"saved":false}
{"ts":1350568055750,"patch":[[{"diffs":[[0,"Map);\n    }\n"],[1,"    Map.setOverlay();"],[0,"\n    /*\n    "]],"start1":991,"start2":991,"length1":24,"length2":45}]],"length":8846,"saved":false}
{"ts":1350568654448,"patch":[[{"diffs":[[0," = \""],[-1,"pgs_buenos_air"],[1,"windshaft_t"],[0,"es"],[1,"t"],[0,"\";//"]],"start1":427,"start2":427,"length1":24,"length2":22}]],"length":8844,"saved":false}
{"ts":1350568738118,"patch":[[{"diffs":[[0," = \""],[-1,"lineassubt"],[1,"test_tabl"],[0,"e\";/"]],"start1":486,"start2":486,"length1":18,"length2":17}]],"length":8843,"saved":false}
{"contributors":[],"silentsave":false,"ts":1350602553017,"patch":[[{"diffs":[[0," = \""],[-1,"windshaft_t"],[1,"pgs_buenos_air"],[0,"es"],[-1,"t"],[0,"\";//"]],"start1":427,"start2":427,"length1":22,"length2":24},{"diffs":[[0," = \""],[-1,"test_tabl"],[1,"lineassubt"],[0,"e\";/"]],"start1":488,"start2":488,"length1":17,"length2":18}]],"length":8846,"saved":false}
