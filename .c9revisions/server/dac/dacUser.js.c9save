{"ts":1349662341120,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var crypto = require('crypto'),\n    uuid = require('node-uuid');\n\nmodule.exports = {\n\n    getLogin: function (client, username, email, pass, callback) {\n\n        client.on('drain', function(client){\n            client.end();\n        });\n\n        try {\n            var query = client.query({\n                text: \"SELECT * from validate_user ($1, $2)\",\n                values: [username, email]\n            }, function (err, result) {\n\n                var passwdHash = result.rows[0].pass;\n                var cryptHash = crypto.createHmac('sha256', result.rows[0].salt).update(pass).digest('hex');\n                if (passwdHash == cryptHash) {\n                    console.log(crypto.createHmac('sha256', result.rows[0].salt).update(pass).digest('hex'));\n                    callback(data = { rows: result.rows, error: err });\n                }\n                else {\n                    var _err = 'Invalid password or user name. Please, enter correct password or user name.';\n                    callback(data = { rows: [], error: _err });\n                }\n            });\n\n            client.pauseDrain();\n        }\n        catch (e) {\n            callback(data = { rows: [], error: e });\n        }\n    },\n\n};\n"]],"start1":0,"start2":0,"length1":0,"length2":1215}]],"length":1215}
{"contributors":[],"silentsave":true,"ts":1353886724190,"patch":[[{"diffs":[[0,"        "],[1,"//"],[0,"console."]],"start1":658,"start2":658,"length1":16,"length2":18}]],"length":1217,"saved":false}
